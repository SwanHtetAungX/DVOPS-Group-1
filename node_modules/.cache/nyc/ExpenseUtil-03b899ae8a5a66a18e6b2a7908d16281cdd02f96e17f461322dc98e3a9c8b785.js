function cov_8pe72al35(){var path="/Users/swanhtetaung/Documents/DVOPS-Group-1/utils/ExpenseUtil.js";var hash="810e77fac0769ff27f55522b83e0aba642d8b061";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/swanhtetaung/Documents/DVOPS-Group-1/utils/ExpenseUtil.js",statementMap:{"0":{start:{line:2,column:11},end:{line:2,column:33}},"1":{start:{line:4,column:20},end:{line:4,column:52}},"2":{start:{line:7,column:30},end:{line:7,column:51}},"3":{start:{line:12,column:2},end:{line:32,column:3}},"4":{start:{line:14,column:17},end:{line:14,column:30}},"5":{start:{line:15,column:24},end:{line:15,column:44}},"6":{start:{line:16,column:19},end:{line:16,column:34}},"7":{start:{line:17,column:21},end:{line:17,column:38}},"8":{start:{line:18,column:21},end:{line:18,column:38}},"9":{start:{line:19,column:17},end:{line:19,column:30}},"10":{start:{line:22,column:23},end:{line:22,column:87}},"11":{start:{line:25,column:28},end:{line:25,column:82}},"12":{start:{line:28,column:4},end:{line:28,column:49}},"13":{start:{line:31,column:4},end:{line:31,column:60}},"14":{start:{line:39,column:19},end:{line:39,column:32}},"15":{start:{line:40,column:21},end:{line:40,column:34}},"16":{start:{line:41,column:28},end:{line:41,column:48}},"17":{start:{line:42,column:23},end:{line:42,column:38}},"18":{start:{line:43,column:25},end:{line:43,column:42}},"19":{start:{line:44,column:25},end:{line:44,column:42}},"20":{start:{line:45,column:21},end:{line:45,column:34}},"21":{start:{line:48,column:28},end:{line:48,column:69}},"22":{start:{line:51,column:23},end:{line:51,column:28}},"23":{start:{line:54,column:8},end:{line:68,column:9}},"24":{start:{line:54,column:21},end:{line:54,column:22}},"25":{start:{line:55,column:33},end:{line:55,column:47}},"26":{start:{line:56,column:12},end:{line:67,column:13}},"27":{start:{line:58,column:16},end:{line:58,column:43}},"28":{start:{line:59,column:16},end:{line:59,column:57}},"29":{start:{line:60,column:16},end:{line:60,column:47}},"30":{start:{line:61,column:16},end:{line:61,column:51}},"31":{start:{line:62,column:16},end:{line:62,column:51}},"32":{start:{line:63,column:16},end:{line:63,column:43}},"33":{start:{line:66,column:16},end:{line:66,column:32}},"34":{start:{line:71,column:8},end:{line:80,column:9}},"35":{start:{line:73,column:12},end:{line:73,column:95}},"36":{start:{line:76,column:12},end:{line:76,column:87}},"37":{start:{line:79,column:12},end:{line:79,column:90}},"38":{start:{line:86,column:4},end:{line:121,column:5}},"39":{start:{line:88,column:19},end:{line:88,column:32}},"40":{start:{line:91,column:28},end:{line:91,column:69}},"41":{start:{line:94,column:20},end:{line:94,column:22}},"42":{start:{line:97,column:8},end:{line:102,column:9}},"43":{start:{line:97,column:21},end:{line:97,column:22}},"44":{start:{line:98,column:33},end:{line:98,column:47}},"45":{start:{line:99,column:12},end:{line:101,column:26}},"46":{start:{line:101,column:16},end:{line:101,column:26}},"47":{start:{line:105,column:8},end:{line:117,column:9}},"48":{start:{line:107,column:12},end:{line:107,column:41}},"49":{start:{line:110,column:12},end:{line:110,column:95}},"50":{start:{line:113,column:12},end:{line:113,column:86}},"51":{start:{line:116,column:12},end:{line:116,column:90}},"52":{start:{line:120,column:8},end:{line:120,column:64}},"53":{start:{line:127,column:0},end:{line:132,column:2}}},fnMap:{"0":{name:"addExpense",decl:{start:{line:11,column:15},end:{line:11,column:25}},loc:{start:{line:11,column:36},end:{line:33,column:1}},line:11},"1":{name:"editExpense",decl:{start:{line:38,column:15},end:{line:38,column:26}},loc:{start:{line:38,column:37},end:{line:82,column:1}},line:38},"2":{name:"deleteExpense",decl:{start:{line:85,column:15},end:{line:85,column:28}},loc:{start:{line:85,column:39},end:{line:122,column:1}},line:85}},branchMap:{"0":{loc:{start:{line:56,column:12},end:{line:67,column:13}},type:"if",locations:[{start:{line:56,column:12},end:{line:67,column:13}},{start:{line:56,column:12},end:{line:67,column:13}}],line:56},"1":{loc:{start:{line:71,column:8},end:{line:80,column:9}},type:"if",locations:[{start:{line:71,column:8},end:{line:80,column:9}},{start:{line:71,column:8},end:{line:80,column:9}}],line:71},"2":{loc:{start:{line:99,column:12},end:{line:101,column:26}},type:"if",locations:[{start:{line:99,column:12},end:{line:101,column:26}},{start:{line:99,column:12},end:{line:101,column:26}}],line:99},"3":{loc:{start:{line:105,column:8},end:{line:117,column:9}},type:"if",locations:[{start:{line:105,column:8},end:{line:117,column:9}},{start:{line:105,column:8},end:{line:117,column:9}}],line:105}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"810e77fac0769ff27f55522b83e0aba642d8b061"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_8pe72al35=function(){return actualCoverage;};}return actualCoverage;}cov_8pe72al35();// Importing the 'fs' module 
const fs=(cov_8pe72al35().s[0]++,require("fs").promises);//Importing Expense Class
const{Expense}=(cov_8pe72al35().s[1]++,require("../models/Transaction"));//Importing required Functions from UserUtil
const{readJSON,writeJSON}=(cov_8pe72al35().s[2]++,require('./UserUtil'));// Function to add an expense to the JSON file and return the updated expenses
async function addExpense(req,res){cov_8pe72al35().f[0]++;cov_8pe72al35().s[3]++;try{// Extracting necessary properties from the request body
const name=(cov_8pe72al35().s[4]++,req.body.name);const description=(cov_8pe72al35().s[5]++,req.body.description);const amount=(cov_8pe72al35().s[6]++,req.body.amount);const category=(cov_8pe72al35().s[7]++,req.body.category);const username=(cov_8pe72al35().s[8]++,req.body.username);const date=(cov_8pe72al35().s[9]++,req.body.date);// Creating a new Expense instance
const newExpense=(cov_8pe72al35().s[10]++,new Expense(name,description,amount,category,username,date));// Writing the new expense to the JSON file and getting the updated expenses
const updatedExpenses=(cov_8pe72al35().s[11]++,await writeJSON(newExpense,"utils/transactions.json"));// Sending the updated expenses as the response with a 201 status code
cov_8pe72al35().s[12]++;return res.status(201).json(updatedExpenses);}catch(error){cov_8pe72al35().s[13]++;// Handling errors during the expense addition process
return res.status(500).json({message:error.message});}}// function to handle the editing of an expense based on its ID
async function editExpense(req,res){cov_8pe72al35().f[1]++;const id=(cov_8pe72al35().s[14]++,req.params.id);const name=(cov_8pe72al35().s[15]++,req.body.name);const description=(cov_8pe72al35().s[16]++,req.body.description);const amount=(cov_8pe72al35().s[17]++,req.body.amount);const category=(cov_8pe72al35().s[18]++,req.body.category);const username=(cov_8pe72al35().s[19]++,req.body.username);const date=(cov_8pe72al35().s[20]++,req.body.date);// Reading all expenses from the JSON file
const allExpenses=(cov_8pe72al35().s[21]++,await readJSON('utils/transactions.json'));// Variable to track if any modification has occurred
var modified=(cov_8pe72al35().s[22]++,false);// Iterating through all expenses to find and update the specified expense by ID
cov_8pe72al35().s[23]++;for(var i=(cov_8pe72al35().s[24]++,0);i<allExpenses.length;i++){var currentExpense=(cov_8pe72al35().s[25]++,allExpenses[i]);cov_8pe72al35().s[26]++;if(currentExpense.id==id){cov_8pe72al35().b[0][0]++;cov_8pe72al35().s[27]++;// Modifying the properties of the matching expense
allExpenses[i].name=name;cov_8pe72al35().s[28]++;allExpenses[i].description=description;cov_8pe72al35().s[29]++;allExpenses[i].amount=amount;cov_8pe72al35().s[30]++;allExpenses[i].category=category;cov_8pe72al35().s[31]++;allExpenses[i].username=username;cov_8pe72al35().s[32]++;allExpenses[i].date=date;// Setting the 'modified' flag to true
cov_8pe72al35().s[33]++;modified=true;}else{cov_8pe72al35().b[0][1]++;}}// Checking if any modification has occurred
cov_8pe72al35().s[34]++;if(modified){cov_8pe72al35().b[1][0]++;cov_8pe72al35().s[35]++;// Writing the updated expenses back to the JSON file
await fs.writeFile('utils/transactions.json',JSON.stringify(allExpenses),'utf8');// Sending a success response with a 201 status code
cov_8pe72al35().s[36]++;return res.status(201).json({message:'Expense modified successfully!'});}else{cov_8pe72al35().b[1][1]++;cov_8pe72al35().s[37]++;// Sending an error response if no modification occurred
return res.status(500).json({message:'Error occurred, unable to modify!'});}}// Function to handle the deletion of an expense based on its ID
async function deleteExpense(req,res){cov_8pe72al35().f[2]++;cov_8pe72al35().s[38]++;try{// Extracting the ID parameter from the request
const id=(cov_8pe72al35().s[39]++,req.params.id);// Reading all expenses from the JSON file
const allExpenses=(cov_8pe72al35().s[40]++,await readJSON('utils/transactions.json'));// Variable to store the index of the expense to be deleted
var index=(cov_8pe72al35().s[41]++,-1);// Iterating through all expenses to find the specified expense by ID
cov_8pe72al35().s[42]++;for(var i=(cov_8pe72al35().s[43]++,0);i<allExpenses.length;i++){var currentExpense=(cov_8pe72al35().s[44]++,allExpenses[i]);cov_8pe72al35().s[45]++;if(currentExpense.id==id){cov_8pe72al35().b[2][0]++;cov_8pe72al35().s[46]++;// Storing the index of the matching expense
index=i;}else{cov_8pe72al35().b[2][1]++;}}// Checking if the specified expense was found
cov_8pe72al35().s[47]++;if(index!=-1){cov_8pe72al35().b[3][0]++;cov_8pe72al35().s[48]++;// Removing the expense from the array by its index
allExpenses.splice(index,1);// Writing the updated expenses back to the JSON file
cov_8pe72al35().s[49]++;await fs.writeFile('utils/transactions.json',JSON.stringify(allExpenses),'utf8');// Sending a success response with a 201 status code
cov_8pe72al35().s[50]++;return res.status(201).json({message:'Expense deleted successfully!'});}else{cov_8pe72al35().b[3][1]++;cov_8pe72al35().s[51]++;// Sending an error response if the specified expense was not found
return res.status(500).json({message:'Error occurred, unable to delete!'});}}catch(error){cov_8pe72al35().s[52]++;// Handling errors during the expense deletion process
return res.status(500).json({message:error.message});}}// Exporting functions
cov_8pe72al35().s[53]++;module.exports={addExpense,editExpense,deleteExpense};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,