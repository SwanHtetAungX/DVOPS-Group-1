function cov_1p2g6s85qa(){var path="/Users/swanhtetaung/Documents/DVOPS-Projects/DVOPS-Group-1/utils/ExpenseUtil.js";var hash="93310dea00e52d2a9d57304f743b365e089954e7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/swanhtetaung/Documents/DVOPS-Projects/DVOPS-Group-1/utils/ExpenseUtil.js",statementMap:{"0":{start:{line:2,column:11},end:{line:2,column:33}},"1":{start:{line:4,column:20},end:{line:4,column:52}},"2":{start:{line:8,column:2},end:{line:16,column:3}},"3":{start:{line:10,column:17},end:{line:10,column:52}},"4":{start:{line:11,column:4},end:{line:11,column:28}},"5":{start:{line:14,column:4},end:{line:14,column:23}},"6":{start:{line:15,column:4},end:{line:15,column:14}},"7":{start:{line:22,column:2},end:{line:38,column:3}},"8":{start:{line:24,column:23},end:{line:24,column:47}},"9":{start:{line:27,column:4},end:{line:27,column:28}},"10":{start:{line:30,column:4},end:{line:30,column:69}},"11":{start:{line:33,column:4},end:{line:33,column:22}},"12":{start:{line:36,column:4},end:{line:36,column:23}},"13":{start:{line:37,column:4},end:{line:37,column:14}},"14":{start:{line:44,column:2},end:{line:64,column:3}},"15":{start:{line:46,column:17},end:{line:46,column:30}},"16":{start:{line:47,column:24},end:{line:47,column:44}},"17":{start:{line:48,column:19},end:{line:48,column:34}},"18":{start:{line:49,column:21},end:{line:49,column:38}},"19":{start:{line:50,column:21},end:{line:50,column:38}},"20":{start:{line:51,column:17},end:{line:51,column:30}},"21":{start:{line:54,column:23},end:{line:54,column:87}},"22":{start:{line:57,column:28},end:{line:57,column:82}},"23":{start:{line:60,column:4},end:{line:60,column:49}},"24":{start:{line:63,column:4},end:{line:63,column:60}},"25":{start:{line:71,column:4},end:{line:118,column:5}},"26":{start:{line:73,column:19},end:{line:73,column:32}},"27":{start:{line:74,column:21},end:{line:74,column:34}},"28":{start:{line:75,column:28},end:{line:75,column:48}},"29":{start:{line:76,column:23},end:{line:76,column:38}},"30":{start:{line:77,column:25},end:{line:77,column:42}},"31":{start:{line:78,column:25},end:{line:78,column:42}},"32":{start:{line:79,column:21},end:{line:79,column:34}},"33":{start:{line:82,column:28},end:{line:82,column:69}},"34":{start:{line:85,column:23},end:{line:85,column:28}},"35":{start:{line:88,column:8},end:{line:102,column:9}},"36":{start:{line:88,column:21},end:{line:88,column:22}},"37":{start:{line:89,column:33},end:{line:89,column:47}},"38":{start:{line:90,column:12},end:{line:101,column:13}},"39":{start:{line:92,column:16},end:{line:92,column:43}},"40":{start:{line:93,column:16},end:{line:93,column:57}},"41":{start:{line:94,column:16},end:{line:94,column:47}},"42":{start:{line:95,column:16},end:{line:95,column:51}},"43":{start:{line:96,column:16},end:{line:96,column:51}},"44":{start:{line:97,column:16},end:{line:97,column:43}},"45":{start:{line:100,column:16},end:{line:100,column:32}},"46":{start:{line:105,column:8},end:{line:114,column:9}},"47":{start:{line:107,column:12},end:{line:107,column:95}},"48":{start:{line:110,column:12},end:{line:110,column:87}},"49":{start:{line:113,column:12},end:{line:113,column:90}},"50":{start:{line:117,column:8},end:{line:117,column:64}},"51":{start:{line:123,column:4},end:{line:158,column:5}},"52":{start:{line:125,column:19},end:{line:125,column:32}},"53":{start:{line:128,column:28},end:{line:128,column:69}},"54":{start:{line:131,column:20},end:{line:131,column:22}},"55":{start:{line:134,column:8},end:{line:139,column:9}},"56":{start:{line:134,column:21},end:{line:134,column:22}},"57":{start:{line:135,column:33},end:{line:135,column:47}},"58":{start:{line:136,column:12},end:{line:138,column:26}},"59":{start:{line:138,column:16},end:{line:138,column:26}},"60":{start:{line:142,column:8},end:{line:154,column:9}},"61":{start:{line:144,column:12},end:{line:144,column:41}},"62":{start:{line:147,column:12},end:{line:147,column:95}},"63":{start:{line:150,column:12},end:{line:150,column:86}},"64":{start:{line:153,column:12},end:{line:153,column:90}},"65":{start:{line:157,column:8},end:{line:157,column:64}},"66":{start:{line:164,column:0},end:{line:169,column:2}}},fnMap:{"0":{name:"readJSON",decl:{start:{line:7,column:15},end:{line:7,column:23}},loc:{start:{line:7,column:34},end:{line:17,column:1}},line:7},"1":{name:"writeJSON",decl:{start:{line:21,column:15},end:{line:21,column:24}},loc:{start:{line:21,column:43},end:{line:39,column:1}},line:21},"2":{name:"addExpense",decl:{start:{line:43,column:15},end:{line:43,column:25}},loc:{start:{line:43,column:36},end:{line:65,column:1}},line:43},"3":{name:"editExpense",decl:{start:{line:70,column:15},end:{line:70,column:26}},loc:{start:{line:70,column:37},end:{line:119,column:1}},line:70},"4":{name:"deleteExpense",decl:{start:{line:122,column:15},end:{line:122,column:28}},loc:{start:{line:122,column:39},end:{line:159,column:1}},line:122}},branchMap:{"0":{loc:{start:{line:90,column:12},end:{line:101,column:13}},type:"if",locations:[{start:{line:90,column:12},end:{line:101,column:13}},{start:{line:90,column:12},end:{line:101,column:13}}],line:90},"1":{loc:{start:{line:105,column:8},end:{line:114,column:9}},type:"if",locations:[{start:{line:105,column:8},end:{line:114,column:9}},{start:{line:105,column:8},end:{line:114,column:9}}],line:105},"2":{loc:{start:{line:136,column:12},end:{line:138,column:26}},type:"if",locations:[{start:{line:136,column:12},end:{line:138,column:26}},{start:{line:136,column:12},end:{line:138,column:26}}],line:136},"3":{loc:{start:{line:142,column:8},end:{line:154,column:9}},type:"if",locations:[{start:{line:142,column:8},end:{line:154,column:9}},{start:{line:142,column:8},end:{line:154,column:9}}],line:142}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"93310dea00e52d2a9d57304f743b365e089954e7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1p2g6s85qa=function(){return actualCoverage;};}return actualCoverage;}cov_1p2g6s85qa();// Importing the 'fs' module 
const fs=(cov_1p2g6s85qa().s[0]++,require("fs").promises);//Importing Expense Class
const{Expense}=(cov_1p2g6s85qa().s[1]++,require("../models/Transaction"));// Function to  read JSON data from a file
async function readJSON(filename){cov_1p2g6s85qa().f[0]++;cov_1p2g6s85qa().s[2]++;try{// Reading the content of the file and parsing it as JSON
const data=(cov_1p2g6s85qa().s[3]++,await fs.readFile(filename,"utf8"));cov_1p2g6s85qa().s[4]++;return JSON.parse(data);}catch(err){cov_1p2g6s85qa().s[5]++;// Handling errors during file read or JSON parsing
console.error(err);cov_1p2g6s85qa().s[6]++;throw err;}}// Function to  write an object to a JSON file
async function writeJSON(object,filename){cov_1p2g6s85qa().f[1]++;cov_1p2g6s85qa().s[7]++;try{// Reading existing JSON data from the file
const allObjects=(cov_1p2g6s85qa().s[8]++,await readJSON(filename));// Appending the new object to the existing array of objects
cov_1p2g6s85qa().s[9]++;allObjects.push(object);// Writing the updated array of objects back to the file
cov_1p2g6s85qa().s[10]++;await fs.writeFile(filename,JSON.stringify(allObjects),"utf8");// Returning the updated array of objects
cov_1p2g6s85qa().s[11]++;return allObjects;}catch(err){cov_1p2g6s85qa().s[12]++;// Handling errors during file read, modification, or write
console.error(err);cov_1p2g6s85qa().s[13]++;throw err;}}// Function to add an expense to the JSON file and return the updated expenses
async function addExpense(req,res){cov_1p2g6s85qa().f[2]++;cov_1p2g6s85qa().s[14]++;try{// Extracting necessary properties from the request body
const name=(cov_1p2g6s85qa().s[15]++,req.body.name);const description=(cov_1p2g6s85qa().s[16]++,req.body.description);const amount=(cov_1p2g6s85qa().s[17]++,req.body.amount);const category=(cov_1p2g6s85qa().s[18]++,req.body.category);const username=(cov_1p2g6s85qa().s[19]++,req.body.username);const date=(cov_1p2g6s85qa().s[20]++,req.body.date);// Creating a new Expense instance
const newExpense=(cov_1p2g6s85qa().s[21]++,new Expense(name,description,amount,category,username,date));// Writing the new expense to the JSON file and getting the updated expenses
const updatedExpenses=(cov_1p2g6s85qa().s[22]++,await writeJSON(newExpense,"utils/transactions.json"));// Sending the updated expenses as the response with a 201 status code
cov_1p2g6s85qa().s[23]++;return res.status(201).json(updatedExpenses);}catch(error){cov_1p2g6s85qa().s[24]++;// Handling errors during the expense addition process
return res.status(500).json({message:error.message});}}// function to handle the editing of an expense based on its ID
async function editExpense(req,res){cov_1p2g6s85qa().f[3]++;cov_1p2g6s85qa().s[25]++;try{// Extracting parameters from the request
const id=(cov_1p2g6s85qa().s[26]++,req.params.id);const name=(cov_1p2g6s85qa().s[27]++,req.body.name);const description=(cov_1p2g6s85qa().s[28]++,req.body.description);const amount=(cov_1p2g6s85qa().s[29]++,req.body.amount);const category=(cov_1p2g6s85qa().s[30]++,req.body.category);const username=(cov_1p2g6s85qa().s[31]++,req.body.username);const date=(cov_1p2g6s85qa().s[32]++,req.body.date);// Reading all expenses from the JSON file
const allExpenses=(cov_1p2g6s85qa().s[33]++,await readJSON('utils/transactions.json'));// Variable to track if any modification has occurred
var modified=(cov_1p2g6s85qa().s[34]++,false);// Iterating through all expenses to find and update the specified expense by ID
cov_1p2g6s85qa().s[35]++;for(var i=(cov_1p2g6s85qa().s[36]++,0);i<allExpenses.length;i++){var currentExpense=(cov_1p2g6s85qa().s[37]++,allExpenses[i]);cov_1p2g6s85qa().s[38]++;if(currentExpense.id==id){cov_1p2g6s85qa().b[0][0]++;cov_1p2g6s85qa().s[39]++;// Modifying the properties of the matching expense
allExpenses[i].name=name;cov_1p2g6s85qa().s[40]++;allExpenses[i].description=description;cov_1p2g6s85qa().s[41]++;allExpenses[i].amount=amount;cov_1p2g6s85qa().s[42]++;allExpenses[i].category=category;cov_1p2g6s85qa().s[43]++;allExpenses[i].username=username;cov_1p2g6s85qa().s[44]++;allExpenses[i].date=date;// Setting the 'modified' flag to true
cov_1p2g6s85qa().s[45]++;modified=true;}else{cov_1p2g6s85qa().b[0][1]++;}}// Checking if any modification has occurred
cov_1p2g6s85qa().s[46]++;if(modified){cov_1p2g6s85qa().b[1][0]++;cov_1p2g6s85qa().s[47]++;// Writing the updated expenses back to the JSON file
await fs.writeFile('utils/transactions.json',JSON.stringify(allExpenses),'utf8');// Sending a success response with a 201 status code
cov_1p2g6s85qa().s[48]++;return res.status(201).json({message:'Expense modified successfully!'});}else{cov_1p2g6s85qa().b[1][1]++;cov_1p2g6s85qa().s[49]++;// Sending an error response if no modification occurred
return res.status(500).json({message:'Error occurred, unable to modify!'});}}catch(error){cov_1p2g6s85qa().s[50]++;// Handling errors during the expense modification process
return res.status(500).json({message:error.message});}}// Function to handle the deletion of an expense based on its ID
async function deleteExpense(req,res){cov_1p2g6s85qa().f[4]++;cov_1p2g6s85qa().s[51]++;try{// Extracting the ID parameter from the request
const id=(cov_1p2g6s85qa().s[52]++,req.params.id);// Reading all expenses from the JSON file
const allExpenses=(cov_1p2g6s85qa().s[53]++,await readJSON('utils/transactions.json'));// Variable to store the index of the expense to be deleted
var index=(cov_1p2g6s85qa().s[54]++,-1);// Iterating through all expenses to find the specified expense by ID
cov_1p2g6s85qa().s[55]++;for(var i=(cov_1p2g6s85qa().s[56]++,0);i<allExpenses.length;i++){var currentExpense=(cov_1p2g6s85qa().s[57]++,allExpenses[i]);cov_1p2g6s85qa().s[58]++;if(currentExpense.id==id){cov_1p2g6s85qa().b[2][0]++;cov_1p2g6s85qa().s[59]++;// Storing the index of the matching expense
index=i;}else{cov_1p2g6s85qa().b[2][1]++;}}// Checking if the specified expense was found
cov_1p2g6s85qa().s[60]++;if(index!=-1){cov_1p2g6s85qa().b[3][0]++;cov_1p2g6s85qa().s[61]++;// Removing the expense from the array by its index
allExpenses.splice(index,1);// Writing the updated expenses back to the JSON file
cov_1p2g6s85qa().s[62]++;await fs.writeFile('utils/transactions.json',JSON.stringify(allExpenses),'utf8');// Sending a success response with a 201 status code
cov_1p2g6s85qa().s[63]++;return res.status(201).json({message:'Expense deleted successfully!'});}else{cov_1p2g6s85qa().b[3][1]++;cov_1p2g6s85qa().s[64]++;// Sending an error response if the specified expense was not found
return res.status(500).json({message:'Error occurred, unable to delete!'});}}catch(error){cov_1p2g6s85qa().s[65]++;// Handling errors during the expense deletion process
return res.status(500).json({message:error.message});}}// Exporting functions
cov_1p2g6s85qa().s[66]++;module.exports={addExpense,editExpense,deleteExpense};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,