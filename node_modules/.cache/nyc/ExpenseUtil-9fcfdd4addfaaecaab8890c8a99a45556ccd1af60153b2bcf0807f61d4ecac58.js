function cov_1p2g6s85qa(){var path="/Users/swanhtetaung/Documents/DVOPS-Projects/DVOPS-Group-1/utils/ExpenseUtil.js";var hash="f313059ff1969d9a76fd8edf9e107fcc7fe6e096";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/swanhtetaung/Documents/DVOPS-Projects/DVOPS-Group-1/utils/ExpenseUtil.js",statementMap:{"0":{start:{line:2,column:11},end:{line:2,column:33}},"1":{start:{line:4,column:20},end:{line:4,column:52}},"2":{start:{line:7,column:30},end:{line:7,column:51}},"3":{start:{line:12,column:2},end:{line:32,column:3}},"4":{start:{line:14,column:17},end:{line:14,column:30}},"5":{start:{line:15,column:24},end:{line:15,column:44}},"6":{start:{line:16,column:19},end:{line:16,column:34}},"7":{start:{line:17,column:21},end:{line:17,column:38}},"8":{start:{line:18,column:21},end:{line:18,column:38}},"9":{start:{line:19,column:17},end:{line:19,column:30}},"10":{start:{line:22,column:23},end:{line:22,column:87}},"11":{start:{line:25,column:28},end:{line:25,column:82}},"12":{start:{line:28,column:4},end:{line:28,column:49}},"13":{start:{line:31,column:4},end:{line:31,column:60}},"14":{start:{line:39,column:4},end:{line:86,column:5}},"15":{start:{line:41,column:19},end:{line:41,column:32}},"16":{start:{line:42,column:21},end:{line:42,column:34}},"17":{start:{line:43,column:28},end:{line:43,column:48}},"18":{start:{line:44,column:23},end:{line:44,column:38}},"19":{start:{line:45,column:25},end:{line:45,column:42}},"20":{start:{line:46,column:25},end:{line:46,column:42}},"21":{start:{line:47,column:21},end:{line:47,column:34}},"22":{start:{line:50,column:28},end:{line:50,column:69}},"23":{start:{line:53,column:23},end:{line:53,column:28}},"24":{start:{line:56,column:8},end:{line:70,column:9}},"25":{start:{line:56,column:21},end:{line:56,column:22}},"26":{start:{line:57,column:33},end:{line:57,column:47}},"27":{start:{line:58,column:12},end:{line:69,column:13}},"28":{start:{line:60,column:16},end:{line:60,column:43}},"29":{start:{line:61,column:16},end:{line:61,column:57}},"30":{start:{line:62,column:16},end:{line:62,column:47}},"31":{start:{line:63,column:16},end:{line:63,column:51}},"32":{start:{line:64,column:16},end:{line:64,column:51}},"33":{start:{line:65,column:16},end:{line:65,column:43}},"34":{start:{line:68,column:16},end:{line:68,column:32}},"35":{start:{line:73,column:8},end:{line:82,column:9}},"36":{start:{line:75,column:12},end:{line:75,column:95}},"37":{start:{line:78,column:12},end:{line:78,column:87}},"38":{start:{line:81,column:12},end:{line:81,column:90}},"39":{start:{line:85,column:8},end:{line:85,column:64}},"40":{start:{line:91,column:4},end:{line:126,column:5}},"41":{start:{line:93,column:19},end:{line:93,column:32}},"42":{start:{line:96,column:28},end:{line:96,column:69}},"43":{start:{line:99,column:20},end:{line:99,column:22}},"44":{start:{line:102,column:8},end:{line:107,column:9}},"45":{start:{line:102,column:21},end:{line:102,column:22}},"46":{start:{line:103,column:33},end:{line:103,column:47}},"47":{start:{line:104,column:12},end:{line:106,column:26}},"48":{start:{line:106,column:16},end:{line:106,column:26}},"49":{start:{line:110,column:8},end:{line:122,column:9}},"50":{start:{line:112,column:12},end:{line:112,column:41}},"51":{start:{line:115,column:12},end:{line:115,column:95}},"52":{start:{line:118,column:12},end:{line:118,column:86}},"53":{start:{line:121,column:12},end:{line:121,column:90}},"54":{start:{line:125,column:8},end:{line:125,column:64}},"55":{start:{line:132,column:0},end:{line:137,column:2}}},fnMap:{"0":{name:"addExpense",decl:{start:{line:11,column:15},end:{line:11,column:25}},loc:{start:{line:11,column:36},end:{line:33,column:1}},line:11},"1":{name:"editExpense",decl:{start:{line:38,column:15},end:{line:38,column:26}},loc:{start:{line:38,column:37},end:{line:87,column:1}},line:38},"2":{name:"deleteExpense",decl:{start:{line:90,column:15},end:{line:90,column:28}},loc:{start:{line:90,column:39},end:{line:127,column:1}},line:90}},branchMap:{"0":{loc:{start:{line:58,column:12},end:{line:69,column:13}},type:"if",locations:[{start:{line:58,column:12},end:{line:69,column:13}},{start:{line:58,column:12},end:{line:69,column:13}}],line:58},"1":{loc:{start:{line:73,column:8},end:{line:82,column:9}},type:"if",locations:[{start:{line:73,column:8},end:{line:82,column:9}},{start:{line:73,column:8},end:{line:82,column:9}}],line:73},"2":{loc:{start:{line:104,column:12},end:{line:106,column:26}},type:"if",locations:[{start:{line:104,column:12},end:{line:106,column:26}},{start:{line:104,column:12},end:{line:106,column:26}}],line:104},"3":{loc:{start:{line:110,column:8},end:{line:122,column:9}},type:"if",locations:[{start:{line:110,column:8},end:{line:122,column:9}},{start:{line:110,column:8},end:{line:122,column:9}}],line:110}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f313059ff1969d9a76fd8edf9e107fcc7fe6e096"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1p2g6s85qa=function(){return actualCoverage;};}return actualCoverage;}cov_1p2g6s85qa();// Importing the 'fs' module 
const fs=(cov_1p2g6s85qa().s[0]++,require("fs").promises);//Importing Expense Class
const{Expense}=(cov_1p2g6s85qa().s[1]++,require("../models/Transaction"));//Importing required Functions from UserUtil
const{readJSON,writeJSON}=(cov_1p2g6s85qa().s[2]++,require('./UserUtil'));// Function to add an expense to the JSON file and return the updated expenses
async function addExpense(req,res){cov_1p2g6s85qa().f[0]++;cov_1p2g6s85qa().s[3]++;try{// Extracting necessary properties from the request body
const name=(cov_1p2g6s85qa().s[4]++,req.body.name);const description=(cov_1p2g6s85qa().s[5]++,req.body.description);const amount=(cov_1p2g6s85qa().s[6]++,req.body.amount);const category=(cov_1p2g6s85qa().s[7]++,req.body.category);const username=(cov_1p2g6s85qa().s[8]++,req.body.username);const date=(cov_1p2g6s85qa().s[9]++,req.body.date);// Creating a new Expense instance
const newExpense=(cov_1p2g6s85qa().s[10]++,new Expense(name,description,amount,category,username,date));// Writing the new expense to the JSON file and getting the updated expenses
const updatedExpenses=(cov_1p2g6s85qa().s[11]++,await writeJSON(newExpense,"utils/transactions.json"));// Sending the updated expenses as the response with a 201 status code
cov_1p2g6s85qa().s[12]++;return res.status(201).json(updatedExpenses);}catch(error){cov_1p2g6s85qa().s[13]++;// Handling errors during the expense addition process
return res.status(500).json({message:error.message});}}// function to handle the editing of an expense based on its ID
async function editExpense(req,res){cov_1p2g6s85qa().f[1]++;cov_1p2g6s85qa().s[14]++;try{// Extracting parameters from the request
const id=(cov_1p2g6s85qa().s[15]++,req.params.id);const name=(cov_1p2g6s85qa().s[16]++,req.body.name);const description=(cov_1p2g6s85qa().s[17]++,req.body.description);const amount=(cov_1p2g6s85qa().s[18]++,req.body.amount);const category=(cov_1p2g6s85qa().s[19]++,req.body.category);const username=(cov_1p2g6s85qa().s[20]++,req.body.username);const date=(cov_1p2g6s85qa().s[21]++,req.body.date);// Reading all expenses from the JSON file
const allExpenses=(cov_1p2g6s85qa().s[22]++,await readJSON('utils/transactions.json'));// Variable to track if any modification has occurred
var modified=(cov_1p2g6s85qa().s[23]++,false);// Iterating through all expenses to find and update the specified expense by ID
cov_1p2g6s85qa().s[24]++;for(var i=(cov_1p2g6s85qa().s[25]++,0);i<allExpenses.length;i++){var currentExpense=(cov_1p2g6s85qa().s[26]++,allExpenses[i]);cov_1p2g6s85qa().s[27]++;if(currentExpense.id==id){cov_1p2g6s85qa().b[0][0]++;cov_1p2g6s85qa().s[28]++;// Modifying the properties of the matching expense
allExpenses[i].name=name;cov_1p2g6s85qa().s[29]++;allExpenses[i].description=description;cov_1p2g6s85qa().s[30]++;allExpenses[i].amount=amount;cov_1p2g6s85qa().s[31]++;allExpenses[i].category=category;cov_1p2g6s85qa().s[32]++;allExpenses[i].username=username;cov_1p2g6s85qa().s[33]++;allExpenses[i].date=date;// Setting the 'modified' flag to true
cov_1p2g6s85qa().s[34]++;modified=true;}else{cov_1p2g6s85qa().b[0][1]++;}}// Checking if any modification has occurred
cov_1p2g6s85qa().s[35]++;if(modified){cov_1p2g6s85qa().b[1][0]++;cov_1p2g6s85qa().s[36]++;// Writing the updated expenses back to the JSON file
await fs.writeFile('utils/transactions.json',JSON.stringify(allExpenses),'utf8');// Sending a success response with a 201 status code
cov_1p2g6s85qa().s[37]++;return res.status(201).json({message:'Expense modified successfully!'});}else{cov_1p2g6s85qa().b[1][1]++;cov_1p2g6s85qa().s[38]++;// Sending an error response if no modification occurred
return res.status(500).json({message:'Error occurred, unable to modify!'});}}catch(error){cov_1p2g6s85qa().s[39]++;// Handling errors during the expense modification process
return res.status(500).json({message:error.message});}}// Function to handle the deletion of an expense based on its ID
async function deleteExpense(req,res){cov_1p2g6s85qa().f[2]++;cov_1p2g6s85qa().s[40]++;try{// Extracting the ID parameter from the request
const id=(cov_1p2g6s85qa().s[41]++,req.params.id);// Reading all expenses from the JSON file
const allExpenses=(cov_1p2g6s85qa().s[42]++,await readJSON('utils/transactions.json'));// Variable to store the index of the expense to be deleted
var index=(cov_1p2g6s85qa().s[43]++,-1);// Iterating through all expenses to find the specified expense by ID
cov_1p2g6s85qa().s[44]++;for(var i=(cov_1p2g6s85qa().s[45]++,0);i<allExpenses.length;i++){var currentExpense=(cov_1p2g6s85qa().s[46]++,allExpenses[i]);cov_1p2g6s85qa().s[47]++;if(currentExpense.id==id){cov_1p2g6s85qa().b[2][0]++;cov_1p2g6s85qa().s[48]++;// Storing the index of the matching expense
index=i;}else{cov_1p2g6s85qa().b[2][1]++;}}// Checking if the specified expense was found
cov_1p2g6s85qa().s[49]++;if(index!=-1){cov_1p2g6s85qa().b[3][0]++;cov_1p2g6s85qa().s[50]++;// Removing the expense from the array by its index
allExpenses.splice(index,1);// Writing the updated expenses back to the JSON file
cov_1p2g6s85qa().s[51]++;await fs.writeFile('utils/transactions.json',JSON.stringify(allExpenses),'utf8');// Sending a success response with a 201 status code
cov_1p2g6s85qa().s[52]++;return res.status(201).json({message:'Expense deleted successfully!'});}else{cov_1p2g6s85qa().b[3][1]++;cov_1p2g6s85qa().s[53]++;// Sending an error response if the specified expense was not found
return res.status(500).json({message:'Error occurred, unable to delete!'});}}catch(error){cov_1p2g6s85qa().s[54]++;// Handling errors during the expense deletion process
return res.status(500).json({message:error.message});}}// Exporting functions
cov_1p2g6s85qa().s[55]++;module.exports={addExpense,editExpense,deleteExpense};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,