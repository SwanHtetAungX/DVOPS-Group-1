function cov_1nyqckbid4(){var path="C:\\Users\\Abhishek\\Desktop\\DVOPS-Group-1 - cypress\\utils\\TransactionUtil.js";var hash="54e10c7c0754f1d0ad0381f4c3729905519748ba";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Abhishek\\Desktop\\DVOPS-Group-1 - cypress\\utils\\TransactionUtil.js",statementMap:{"0":{start:{line:2,column:11},end:{line:2,column:33}},"1":{start:{line:5,column:32},end:{line:5,column:53}},"2":{start:{line:8,column:19},end:{line:8,column:51}},"3":{start:{line:12,column:2},end:{line:21,column:3}},"4":{start:{line:14,column:28},end:{line:14,column:69}},"5":{start:{line:17,column:4},end:{line:17,column:49}},"6":{start:{line:20,column:4},end:{line:20,column:60}},"7":{start:{line:26,column:2},end:{line:53,column:3}},"8":{start:{line:28,column:17},end:{line:28,column:30}},"9":{start:{line:29,column:24},end:{line:29,column:44}},"10":{start:{line:30,column:19},end:{line:30,column:34}},"11":{start:{line:31,column:19},end:{line:31,column:34}},"12":{start:{line:32,column:21},end:{line:32,column:38}},"13":{start:{line:33,column:17},end:{line:33,column:30}},"14":{start:{line:36,column:22},end:{line:43,column:5}},"15":{start:{line:46,column:26},end:{line:46,column:79}},"16":{start:{line:49,column:4},end:{line:49,column:47}},"17":{start:{line:52,column:4},end:{line:52,column:60}},"18":{start:{line:58,column:2},end:{line:111,column:3}},"19":{start:{line:60,column:15},end:{line:60,column:28}},"20":{start:{line:61,column:17},end:{line:61,column:30}},"21":{start:{line:62,column:24},end:{line:62,column:44}},"22":{start:{line:63,column:19},end:{line:63,column:34}},"23":{start:{line:64,column:19},end:{line:64,column:34}},"24":{start:{line:65,column:21},end:{line:65,column:38}},"25":{start:{line:66,column:17},end:{line:66,column:30}},"26":{start:{line:69,column:28},end:{line:69,column:69}},"27":{start:{line:72,column:19},end:{line:72,column:24}},"28":{start:{line:75,column:4},end:{line:89,column:5}},"29":{start:{line:75,column:17},end:{line:75,column:18}},"30":{start:{line:76,column:26},end:{line:76,column:44}},"31":{start:{line:77,column:6},end:{line:88,column:7}},"32":{start:{line:79,column:8},end:{line:79,column:39}},"33":{start:{line:80,column:8},end:{line:80,column:53}},"34":{start:{line:81,column:8},end:{line:81,column:43}},"35":{start:{line:82,column:8},end:{line:82,column:43}},"36":{start:{line:83,column:8},end:{line:83,column:47}},"37":{start:{line:84,column:8},end:{line:84,column:39}},"38":{start:{line:87,column:8},end:{line:87,column:24}},"39":{start:{line:92,column:4},end:{line:107,column:5}},"40":{start:{line:94,column:6},end:{line:98,column:8}},"41":{start:{line:101,column:6},end:{line:101,column:80}},"42":{start:{line:104,column:6},end:{line:106,column:64}},"43":{start:{line:110,column:4},end:{line:110,column:60}},"44":{start:{line:116,column:2},end:{line:157,column:3}},"45":{start:{line:118,column:15},end:{line:118,column:28}},"46":{start:{line:121,column:28},end:{line:121,column:69}},"47":{start:{line:124,column:16},end:{line:124,column:18}},"48":{start:{line:127,column:4},end:{line:132,column:5}},"49":{start:{line:127,column:17},end:{line:127,column:18}},"50":{start:{line:128,column:26},end:{line:128,column:44}},"51":{start:{line:129,column:6},end:{line:131,column:18}},"52":{start:{line:131,column:8},end:{line:131,column:18}},"53":{start:{line:135,column:4},end:{line:153,column:5}},"54":{start:{line:137,column:6},end:{line:137,column:39}},"55":{start:{line:140,column:6},end:{line:144,column:8}},"56":{start:{line:147,column:6},end:{line:147,column:79}},"57":{start:{line:150,column:6},end:{line:152,column:64}},"58":{start:{line:156,column:4},end:{line:156,column:60}},"59":{start:{line:161,column:0},end:{line:166,column:2}}},fnMap:{"0":{name:"viewTransactions",decl:{start:{line:11,column:15},end:{line:11,column:31}},loc:{start:{line:11,column:42},end:{line:22,column:1}},line:11},"1":{name:"addIncome",decl:{start:{line:25,column:15},end:{line:25,column:24}},loc:{start:{line:25,column:35},end:{line:54,column:1}},line:25},"2":{name:"editIncome",decl:{start:{line:57,column:15},end:{line:57,column:25}},loc:{start:{line:57,column:36},end:{line:112,column:1}},line:57},"3":{name:"deleteIncome",decl:{start:{line:115,column:15},end:{line:115,column:27}},loc:{start:{line:115,column:38},end:{line:158,column:1}},line:115}},branchMap:{"0":{loc:{start:{line:77,column:6},end:{line:88,column:7}},type:"if",locations:[{start:{line:77,column:6},end:{line:88,column:7}},{start:{line:77,column:6},end:{line:88,column:7}}],line:77},"1":{loc:{start:{line:92,column:4},end:{line:107,column:5}},type:"if",locations:[{start:{line:92,column:4},end:{line:107,column:5}},{start:{line:92,column:4},end:{line:107,column:5}}],line:92},"2":{loc:{start:{line:129,column:6},end:{line:131,column:18}},type:"if",locations:[{start:{line:129,column:6},end:{line:131,column:18}},{start:{line:129,column:6},end:{line:131,column:18}}],line:129},"3":{loc:{start:{line:135,column:4},end:{line:153,column:5}},type:"if",locations:[{start:{line:135,column:4},end:{line:153,column:5}},{start:{line:135,column:4},end:{line:153,column:5}}],line:135}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"54e10c7c0754f1d0ad0381f4c3729905519748ba"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1nyqckbid4=function(){return actualCoverage;};}return actualCoverage;}cov_1nyqckbid4();// Importing the 'fs' module
const fs=(cov_1nyqckbid4().s[0]++,require("fs").promises);// Importing readJSON and writeJSON functions from UserUtil
const{readJSON,writeJSON}=(cov_1nyqckbid4().s[1]++,require("./UserUtil"));// Importing Transactions model from the models directory
const{Income}=(cov_1nyqckbid4().s[2]++,require("../models/Transaction"));// Controller function to handle the viewing of all transactions
async function viewTransactions(req,res){cov_1nyqckbid4().f[0]++;cov_1nyqckbid4().s[3]++;try{// Read all transactions from the JSON file using the readJSON utility function
const allTransactions=(cov_1nyqckbid4().s[4]++,await readJSON("utils/transactions.json"));// Return a success response with a status code of 200 and JSON containing all transactions
cov_1nyqckbid4().s[5]++;return res.status(200).json(allTransactions);}catch(error){cov_1nyqckbid4().s[6]++;// If an error occurs during the process, handle it and return a response with a status code of 500
return res.status(500).json({message:error.message});}}// Controller function to handle the addition of a new income
async function addIncome(req,res){cov_1nyqckbid4().f[1]++;cov_1nyqckbid4().s[7]++;try{// Extracting data from the request body
const name=(cov_1nyqckbid4().s[8]++,req.body.name);// Name of the income
const description=(cov_1nyqckbid4().s[9]++,req.body.description);// Description of the income
const amount=(cov_1nyqckbid4().s[10]++,req.body.amount);// Amount of the income
const source=(cov_1nyqckbid4().s[11]++,req.body.source);// Source of the income
const username=(cov_1nyqckbid4().s[12]++,req.body.username);// Username associated with the income
const date=(cov_1nyqckbid4().s[13]++,req.body.date);// Creating a new Income instance
const newIncome=(cov_1nyqckbid4().s[14]++,new Income(name,description,amount,source,username,date));// Writing the new income to the JSON file and getting the updated expenses
const updatedIncome=(cov_1nyqckbid4().s[15]++,await writeJSON(newIncome,"utils/transactions.json"));// Sending the updated income as the response with a 201 status code
cov_1nyqckbid4().s[16]++;return res.status(201).json(updatedIncome);}catch(error){cov_1nyqckbid4().s[17]++;// Handling errors during the income addition process
return res.status(500).json({message:error.message});}}// Controller function to handle the editing of an expense based on its ID
async function editIncome(req,res){cov_1nyqckbid4().f[2]++;cov_1nyqckbid4().s[18]++;try{// Extracting parameters from the request
const id=(cov_1nyqckbid4().s[19]++,req.params.id);const name=(cov_1nyqckbid4().s[20]++,req.body.name);// Name of the income
const description=(cov_1nyqckbid4().s[21]++,req.body.description);// Description of the income
const amount=(cov_1nyqckbid4().s[22]++,req.body.amount);// Amount of the income
const source=(cov_1nyqckbid4().s[23]++,req.body.source);// Source of the income
const username=(cov_1nyqckbid4().s[24]++,req.body.username);// Username associated with the income
const date=(cov_1nyqckbid4().s[25]++,req.body.date);// Reading all income from the JSON file
const allTransactions=(cov_1nyqckbid4().s[26]++,await readJSON("utils/transactions.json"));// Variable to track if any modification has occurred
var modified=(cov_1nyqckbid4().s[27]++,false);// Iterating through all income to find and update the specified income by ID
cov_1nyqckbid4().s[28]++;for(var i=(cov_1nyqckbid4().s[29]++,0);i<allTransactions.length;i++){var currentIncome=(cov_1nyqckbid4().s[30]++,allTransactions[i]);cov_1nyqckbid4().s[31]++;if(currentIncome.id==id){cov_1nyqckbid4().b[0][0]++;cov_1nyqckbid4().s[32]++;// Modifying the properties of the matching income
allTransactions[i].name=name;cov_1nyqckbid4().s[33]++;allTransactions[i].description=description;cov_1nyqckbid4().s[34]++;allTransactions[i].amount=amount;cov_1nyqckbid4().s[35]++;allTransactions[i].source=source;cov_1nyqckbid4().s[36]++;allTransactions[i].username=username;cov_1nyqckbid4().s[37]++;allTransactions[i].date=date;// Setting the 'modified' flag to true
cov_1nyqckbid4().s[38]++;modified=true;}else{cov_1nyqckbid4().b[0][1]++;}}// Checking if any modification has occurred
cov_1nyqckbid4().s[39]++;if(modified){cov_1nyqckbid4().b[1][0]++;cov_1nyqckbid4().s[40]++;// Writing the updated income back to the JSON file
await fs.writeFile("utils/transactions.json",JSON.stringify(allTransactions),"utf8");// Sending a success response with a 201 status code
cov_1nyqckbid4().s[41]++;return res.status(201).json({message:"Income modified successfully!"});}else{cov_1nyqckbid4().b[1][1]++;cov_1nyqckbid4().s[42]++;// Sending an error response if no modification occurred
return res.status(500).json({message:"Error occurred, unable to modify!"});}}catch(error){cov_1nyqckbid4().s[43]++;// Handling errors during the expense modification process
return res.status(500).json({message:error.message});}}// Controller function to handle the deletion of an income based on its ID
async function deleteIncome(req,res){cov_1nyqckbid4().f[3]++;cov_1nyqckbid4().s[44]++;try{// Extracting the ID parameter from the request
const id=(cov_1nyqckbid4().s[45]++,req.params.id);// Reading all incomes from the JSON file
const allTransactions=(cov_1nyqckbid4().s[46]++,await readJSON("utils/transactions.json"));// Variable to store the index of the income to be deleted
var index=(cov_1nyqckbid4().s[47]++,-1);// Iterating through all incomes to find the specified income by ID
cov_1nyqckbid4().s[48]++;for(var i=(cov_1nyqckbid4().s[49]++,0);i<allTransactions.length;i++){var currentIncome=(cov_1nyqckbid4().s[50]++,allTransactions[i]);cov_1nyqckbid4().s[51]++;if(currentIncome.id==id){cov_1nyqckbid4().b[2][0]++;cov_1nyqckbid4().s[52]++;// Storing the index of the matching income
index=i;}else{cov_1nyqckbid4().b[2][1]++;}}// Checking if the specified income was found
cov_1nyqckbid4().s[53]++;if(index!=-1){cov_1nyqckbid4().b[3][0]++;cov_1nyqckbid4().s[54]++;// Removing the income from the array by its index
allTransactions.splice(index,1);// Writing the updated incomes back to the JSON file
cov_1nyqckbid4().s[55]++;await fs.writeFile("utils/transactions.json",JSON.stringify(allTransactions),"utf8");// Sending a success response with a 201 status code
cov_1nyqckbid4().s[56]++;return res.status(201).json({message:"Income deleted successfully!"});}else{cov_1nyqckbid4().b[3][1]++;cov_1nyqckbid4().s[57]++;// Sending an error response if the specified income was not found
return res.status(500).json({message:"Error occurred, unable to delete!"});}}catch(error){cov_1nyqckbid4().s[58]++;// Handling errors during the income deletion process
return res.status(500).json({message:error.message});}}// Exporting the addIncome function to make it accessible to other parts of the application
cov_1nyqckbid4().s[59]++;module.exports={addIncome,editIncome,deleteIncome,viewTransactions};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,