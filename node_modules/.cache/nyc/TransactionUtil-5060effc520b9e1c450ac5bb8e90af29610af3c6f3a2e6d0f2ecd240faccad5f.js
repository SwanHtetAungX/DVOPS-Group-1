function cov_1u1pu8gig6(){var path="C:\\Users\\Chun Kang So\\Desktop\\Y2S2 Projects\\DVOPS\\DVOPS-Group-1\\utils\\TransactionUtil.js";var hash="3f42dc0b6f2cad6621706f152974622f80944d35";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Chun Kang So\\Desktop\\Y2S2 Projects\\DVOPS\\DVOPS-Group-1\\utils\\TransactionUtil.js",statementMap:{"0":{start:{line:2,column:11},end:{line:2,column:33}},"1":{start:{line:5,column:32},end:{line:5,column:53}},"2":{start:{line:8,column:19},end:{line:8,column:51}},"3":{start:{line:12,column:2},end:{line:21,column:3}},"4":{start:{line:14,column:28},end:{line:14,column:69}},"5":{start:{line:17,column:4},end:{line:17,column:49}},"6":{start:{line:20,column:4},end:{line:20,column:60}},"7":{start:{line:26,column:2},end:{line:46,column:3}},"8":{start:{line:28,column:17},end:{line:28,column:30}},"9":{start:{line:29,column:24},end:{line:29,column:44}},"10":{start:{line:30,column:19},end:{line:30,column:34}},"11":{start:{line:31,column:19},end:{line:31,column:34}},"12":{start:{line:32,column:21},end:{line:32,column:38}},"13":{start:{line:33,column:17},end:{line:33,column:30}},"14":{start:{line:36,column:22},end:{line:36,column:83}},"15":{start:{line:39,column:26},end:{line:39,column:79}},"16":{start:{line:42,column:4},end:{line:42,column:47}},"17":{start:{line:45,column:4},end:{line:45,column:60}},"18":{start:{line:51,column:2},end:{line:98,column:3}},"19":{start:{line:53,column:15},end:{line:53,column:28}},"20":{start:{line:54,column:17},end:{line:54,column:30}},"21":{start:{line:55,column:24},end:{line:55,column:44}},"22":{start:{line:56,column:19},end:{line:56,column:34}},"23":{start:{line:57,column:19},end:{line:57,column:34}},"24":{start:{line:58,column:21},end:{line:58,column:38}},"25":{start:{line:59,column:17},end:{line:59,column:30}},"26":{start:{line:62,column:28},end:{line:62,column:69}},"27":{start:{line:65,column:19},end:{line:65,column:24}},"28":{start:{line:68,column:4},end:{line:82,column:5}},"29":{start:{line:68,column:17},end:{line:68,column:18}},"30":{start:{line:69,column:26},end:{line:69,column:44}},"31":{start:{line:70,column:6},end:{line:81,column:7}},"32":{start:{line:72,column:8},end:{line:72,column:39}},"33":{start:{line:73,column:8},end:{line:73,column:53}},"34":{start:{line:74,column:8},end:{line:74,column:43}},"35":{start:{line:75,column:8},end:{line:75,column:43}},"36":{start:{line:76,column:8},end:{line:76,column:47}},"37":{start:{line:77,column:8},end:{line:77,column:39}},"38":{start:{line:80,column:8},end:{line:80,column:24}},"39":{start:{line:85,column:4},end:{line:94,column:5}},"40":{start:{line:87,column:6},end:{line:87,column:93}},"41":{start:{line:90,column:6},end:{line:90,column:80}},"42":{start:{line:93,column:6},end:{line:93,column:84}},"43":{start:{line:97,column:4},end:{line:97,column:60}},"44":{start:{line:104,column:2},end:{line:139,column:3}},"45":{start:{line:106,column:15},end:{line:106,column:28}},"46":{start:{line:109,column:28},end:{line:109,column:69}},"47":{start:{line:112,column:16},end:{line:112,column:18}},"48":{start:{line:115,column:4},end:{line:120,column:5}},"49":{start:{line:115,column:17},end:{line:115,column:18}},"50":{start:{line:116,column:26},end:{line:116,column:44}},"51":{start:{line:117,column:6},end:{line:119,column:18}},"52":{start:{line:119,column:8},end:{line:119,column:18}},"53":{start:{line:123,column:4},end:{line:135,column:5}},"54":{start:{line:125,column:6},end:{line:125,column:39}},"55":{start:{line:128,column:6},end:{line:128,column:93}},"56":{start:{line:131,column:6},end:{line:131,column:79}},"57":{start:{line:134,column:6},end:{line:134,column:84}},"58":{start:{line:138,column:4},end:{line:138,column:60}},"59":{start:{line:144,column:0},end:{line:146,column:2}}},fnMap:{"0":{name:"viewTransactions",decl:{start:{line:11,column:15},end:{line:11,column:31}},loc:{start:{line:11,column:42},end:{line:22,column:1}},line:11},"1":{name:"addIncome",decl:{start:{line:25,column:15},end:{line:25,column:24}},loc:{start:{line:25,column:35},end:{line:47,column:1}},line:25},"2":{name:"editIncome",decl:{start:{line:50,column:15},end:{line:50,column:25}},loc:{start:{line:50,column:36},end:{line:99,column:1}},line:50},"3":{name:"deleteIncome",decl:{start:{line:103,column:15},end:{line:103,column:27}},loc:{start:{line:103,column:38},end:{line:140,column:1}},line:103}},branchMap:{"0":{loc:{start:{line:70,column:6},end:{line:81,column:7}},type:"if",locations:[{start:{line:70,column:6},end:{line:81,column:7}},{start:{line:70,column:6},end:{line:81,column:7}}],line:70},"1":{loc:{start:{line:85,column:4},end:{line:94,column:5}},type:"if",locations:[{start:{line:85,column:4},end:{line:94,column:5}},{start:{line:85,column:4},end:{line:94,column:5}}],line:85},"2":{loc:{start:{line:117,column:6},end:{line:119,column:18}},type:"if",locations:[{start:{line:117,column:6},end:{line:119,column:18}},{start:{line:117,column:6},end:{line:119,column:18}}],line:117},"3":{loc:{start:{line:123,column:4},end:{line:135,column:5}},type:"if",locations:[{start:{line:123,column:4},end:{line:135,column:5}},{start:{line:123,column:4},end:{line:135,column:5}}],line:123}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3f42dc0b6f2cad6621706f152974622f80944d35"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1u1pu8gig6=function(){return actualCoverage;};}return actualCoverage;}cov_1u1pu8gig6();// Importing the 'fs' module 
const fs=(cov_1u1pu8gig6().s[0]++,require("fs").promises);// Importing readJSON and writeJSON functions from UserUtil
const{readJSON,writeJSON}=(cov_1u1pu8gig6().s[1]++,require('./UserUtil'));// Importing Transactions model from the models directory
const{Income}=(cov_1u1pu8gig6().s[2]++,require('../models/Transaction'));// Controller function to handle the viewing of all transactions
async function viewTransactions(req,res){cov_1u1pu8gig6().f[0]++;cov_1u1pu8gig6().s[3]++;try{// Read all transactions from the JSON file using the readJSON utility function
const allTransactions=(cov_1u1pu8gig6().s[4]++,await readJSON("utils/transactions.json"));// Return a success response with a status code of 200 and JSON containing all transactions
cov_1u1pu8gig6().s[5]++;return res.status(200).json(allTransactions);}catch(error){cov_1u1pu8gig6().s[6]++;// If an error occurs during the process, handle it and return a response with a status code of 500
return res.status(500).json({message:error.message});}}// Controller function to handle the addition of a new income
async function addIncome(req,res){cov_1u1pu8gig6().f[1]++;cov_1u1pu8gig6().s[7]++;try{// Extracting data from the request body
const name=(cov_1u1pu8gig6().s[8]++,req.body.name);// Name of the income 
const description=(cov_1u1pu8gig6().s[9]++,req.body.description);// Description of the income
const amount=(cov_1u1pu8gig6().s[10]++,req.body.amount);// Amount of the income
const source=(cov_1u1pu8gig6().s[11]++,req.body.source);// Source of the income
const username=(cov_1u1pu8gig6().s[12]++,req.body.username);// Username associated with the income
const date=(cov_1u1pu8gig6().s[13]++,req.body.date);// Creating a new Income instance
const newIncome=(cov_1u1pu8gig6().s[14]++,new Income(name,description,amount,source,username,date));// Writing the new income to the JSON file and getting the updated expenses
const updatedIncome=(cov_1u1pu8gig6().s[15]++,await writeJSON(newIncome,"utils/transactions.json"));// Sending the updated income as the response with a 201 status code
cov_1u1pu8gig6().s[16]++;return res.status(201).json(updatedIncome);}catch(error){cov_1u1pu8gig6().s[17]++;// Handling errors during the income addition process
return res.status(500).json({message:error.message});}}// Controller function to handle the editing of an expense based on its ID
async function editIncome(req,res){cov_1u1pu8gig6().f[2]++;cov_1u1pu8gig6().s[18]++;try{// Extracting parameters from the request
const id=(cov_1u1pu8gig6().s[19]++,req.params.id);const name=(cov_1u1pu8gig6().s[20]++,req.body.name);// Name of the income 
const description=(cov_1u1pu8gig6().s[21]++,req.body.description);// Description of the income
const amount=(cov_1u1pu8gig6().s[22]++,req.body.amount);// Amount of the income
const source=(cov_1u1pu8gig6().s[23]++,req.body.source);// Source of the income
const username=(cov_1u1pu8gig6().s[24]++,req.body.username);// Username associated with the income
const date=(cov_1u1pu8gig6().s[25]++,req.body.date);// Reading all income from the JSON file
const allTransactions=(cov_1u1pu8gig6().s[26]++,await readJSON('utils/transactions.json'));// Variable to track if any modification has occurred
var modified=(cov_1u1pu8gig6().s[27]++,false);// Iterating through all income to find and update the specified income by ID
cov_1u1pu8gig6().s[28]++;for(var i=(cov_1u1pu8gig6().s[29]++,0);i<allTransactions.length;i++){var currentIncome=(cov_1u1pu8gig6().s[30]++,allTransactions[i]);cov_1u1pu8gig6().s[31]++;if(currentIncome.id==id){cov_1u1pu8gig6().b[0][0]++;cov_1u1pu8gig6().s[32]++;// Modifying the properties of the matching income
allTransactions[i].name=name;cov_1u1pu8gig6().s[33]++;allTransactions[i].description=description;cov_1u1pu8gig6().s[34]++;allTransactions[i].amount=amount;cov_1u1pu8gig6().s[35]++;allTransactions[i].source=source;cov_1u1pu8gig6().s[36]++;allTransactions[i].username=username;cov_1u1pu8gig6().s[37]++;allTransactions[i].date=date;// Setting the 'modified' flag to true
cov_1u1pu8gig6().s[38]++;modified=true;}else{cov_1u1pu8gig6().b[0][1]++;}}// Checking if any modification has occurred
cov_1u1pu8gig6().s[39]++;if(modified){cov_1u1pu8gig6().b[1][0]++;cov_1u1pu8gig6().s[40]++;// Writing the updated income back to the JSON file
await fs.writeFile('utils/transactions.json',JSON.stringify(allTransactions),'utf8');// Sending a success response with a 201 status code
cov_1u1pu8gig6().s[41]++;return res.status(201).json({message:'Income modified successfully!'});}else{cov_1u1pu8gig6().b[1][1]++;cov_1u1pu8gig6().s[42]++;// Sending an error response if no modification occurred
return res.status(500).json({message:'Error occurred, unable to modify!'});}}catch(error){cov_1u1pu8gig6().s[43]++;// Handling errors during the expense modification process
return res.status(500).json({message:error.message});}}// Controller function to handle the deletion of an income based on its ID
async function deleteIncome(req,res){cov_1u1pu8gig6().f[3]++;cov_1u1pu8gig6().s[44]++;try{// Extracting the ID parameter from the request
const id=(cov_1u1pu8gig6().s[45]++,req.params.id);// Reading all incomes from the JSON file
const allTransactions=(cov_1u1pu8gig6().s[46]++,await readJSON('utils/transactions.json'));// Variable to store the index of the income to be deleted
var index=(cov_1u1pu8gig6().s[47]++,-1);// Iterating through all incomes to find the specified income by ID
cov_1u1pu8gig6().s[48]++;for(var i=(cov_1u1pu8gig6().s[49]++,0);i<allTransactions.length;i++){var currentIncome=(cov_1u1pu8gig6().s[50]++,allTransactions[i]);cov_1u1pu8gig6().s[51]++;if(currentIncome.id==id){cov_1u1pu8gig6().b[2][0]++;cov_1u1pu8gig6().s[52]++;// Storing the index of the matching income
index=i;}else{cov_1u1pu8gig6().b[2][1]++;}}// Checking if the specified income was found
cov_1u1pu8gig6().s[53]++;if(index!=-1){cov_1u1pu8gig6().b[3][0]++;cov_1u1pu8gig6().s[54]++;// Removing the income from the array by its index
allTransactions.splice(index,1);// Writing the updated incomes back to the JSON file
cov_1u1pu8gig6().s[55]++;await fs.writeFile('utils/transactions.json',JSON.stringify(allTransactions),'utf8');// Sending a success response with a 201 status code
cov_1u1pu8gig6().s[56]++;return res.status(201).json({message:'Income deleted successfully!'});}else{cov_1u1pu8gig6().b[3][1]++;cov_1u1pu8gig6().s[57]++;// Sending an error response if the specified income was not found
return res.status(500).json({message:'Error occurred, unable to delete!'});}}catch(error){cov_1u1pu8gig6().s[58]++;// Handling errors during the income deletion process
return res.status(500).json({message:error.message});}}// Exporting the addIncome function to make it accessible to other parts of the application
cov_1u1pu8gig6().s[59]++;module.exports={addIncome,editIncome,deleteIncome,viewTransactions};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXUxcHU4Z2lnNiIsImFjdHVhbENvdmVyYWdlIiwiZnMiLCJzIiwicmVxdWlyZSIsInByb21pc2VzIiwicmVhZEpTT04iLCJ3cml0ZUpTT04iLCJJbmNvbWUiLCJ2aWV3VHJhbnNhY3Rpb25zIiwicmVxIiwicmVzIiwiZiIsImFsbFRyYW5zYWN0aW9ucyIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1lc3NhZ2UiLCJhZGRJbmNvbWUiLCJuYW1lIiwiYm9keSIsImRlc2NyaXB0aW9uIiwiYW1vdW50Iiwic291cmNlIiwidXNlcm5hbWUiLCJkYXRlIiwibmV3SW5jb21lIiwidXBkYXRlZEluY29tZSIsImVkaXRJbmNvbWUiLCJpZCIsInBhcmFtcyIsIm1vZGlmaWVkIiwiaSIsImxlbmd0aCIsImN1cnJlbnRJbmNvbWUiLCJiIiwid3JpdGVGaWxlIiwiSlNPTiIsInN0cmluZ2lmeSIsImRlbGV0ZUluY29tZSIsImluZGV4Iiwic3BsaWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIlRyYW5zYWN0aW9uVXRpbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRpbmcgdGhlICdmcycgbW9kdWxlIFxyXG5jb25zdCBmcyA9IHJlcXVpcmUoXCJmc1wiKS5wcm9taXNlcztcclxuXHJcbi8vIEltcG9ydGluZyByZWFkSlNPTiBhbmQgd3JpdGVKU09OIGZ1bmN0aW9ucyBmcm9tIFVzZXJVdGlsXHJcbmNvbnN0IHsgcmVhZEpTT04sIHdyaXRlSlNPTiB9ID0gcmVxdWlyZSgnLi9Vc2VyVXRpbCcpO1xyXG5cclxuLy8gSW1wb3J0aW5nIFRyYW5zYWN0aW9ucyBtb2RlbCBmcm9tIHRoZSBtb2RlbHMgZGlyZWN0b3J5XHJcbmNvbnN0IHsgSW5jb21lIH0gPSByZXF1aXJlKCcuLi9tb2RlbHMvVHJhbnNhY3Rpb24nKTtcclxuXHJcbi8vIENvbnRyb2xsZXIgZnVuY3Rpb24gdG8gaGFuZGxlIHRoZSB2aWV3aW5nIG9mIGFsbCB0cmFuc2FjdGlvbnNcclxuYXN5bmMgZnVuY3Rpb24gdmlld1RyYW5zYWN0aW9ucyhyZXEsIHJlcykge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBSZWFkIGFsbCB0cmFuc2FjdGlvbnMgZnJvbSB0aGUgSlNPTiBmaWxlIHVzaW5nIHRoZSByZWFkSlNPTiB1dGlsaXR5IGZ1bmN0aW9uXHJcbiAgICBjb25zdCBhbGxUcmFuc2FjdGlvbnMgPSBhd2FpdCByZWFkSlNPTihcInV0aWxzL3RyYW5zYWN0aW9ucy5qc29uXCIpO1xyXG5cclxuICAgIC8vIFJldHVybiBhIHN1Y2Nlc3MgcmVzcG9uc2Ugd2l0aCBhIHN0YXR1cyBjb2RlIG9mIDIwMCBhbmQgSlNPTiBjb250YWluaW5nIGFsbCB0cmFuc2FjdGlvbnNcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihhbGxUcmFuc2FjdGlvbnMpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAvLyBJZiBhbiBlcnJvciBvY2N1cnMgZHVyaW5nIHRoZSBwcm9jZXNzLCBoYW5kbGUgaXQgYW5kIHJldHVybiBhIHJlc3BvbnNlIHdpdGggYSBzdGF0dXMgY29kZSBvZiA1MDBcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBDb250cm9sbGVyIGZ1bmN0aW9uIHRvIGhhbmRsZSB0aGUgYWRkaXRpb24gb2YgYSBuZXcgaW5jb21lXHJcbmFzeW5jIGZ1bmN0aW9uIGFkZEluY29tZShyZXEsIHJlcykge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBFeHRyYWN0aW5nIGRhdGEgZnJvbSB0aGUgcmVxdWVzdCBib2R5XHJcbiAgICBjb25zdCBuYW1lID0gcmVxLmJvZHkubmFtZTsgLy8gTmFtZSBvZiB0aGUgaW5jb21lIFxyXG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSByZXEuYm9keS5kZXNjcmlwdGlvbjsgLy8gRGVzY3JpcHRpb24gb2YgdGhlIGluY29tZVxyXG4gICAgY29uc3QgYW1vdW50ID0gcmVxLmJvZHkuYW1vdW50OyAvLyBBbW91bnQgb2YgdGhlIGluY29tZVxyXG4gICAgY29uc3Qgc291cmNlID0gcmVxLmJvZHkuc291cmNlOyAvLyBTb3VyY2Ugb2YgdGhlIGluY29tZVxyXG4gICAgY29uc3QgdXNlcm5hbWUgPSByZXEuYm9keS51c2VybmFtZTsgLy8gVXNlcm5hbWUgYXNzb2NpYXRlZCB3aXRoIHRoZSBpbmNvbWVcclxuICAgIGNvbnN0IGRhdGUgPSByZXEuYm9keS5kYXRlO1xyXG5cclxuICAgIC8vIENyZWF0aW5nIGEgbmV3IEluY29tZSBpbnN0YW5jZVxyXG4gICAgY29uc3QgbmV3SW5jb21lID0gbmV3IEluY29tZShuYW1lLCBkZXNjcmlwdGlvbiwgYW1vdW50LCBzb3VyY2UsIHVzZXJuYW1lLCBkYXRlKTtcclxuXHJcbiAgICAvLyBXcml0aW5nIHRoZSBuZXcgaW5jb21lIHRvIHRoZSBKU09OIGZpbGUgYW5kIGdldHRpbmcgdGhlIHVwZGF0ZWQgZXhwZW5zZXNcclxuICAgIGNvbnN0IHVwZGF0ZWRJbmNvbWUgPSBhd2FpdCB3cml0ZUpTT04obmV3SW5jb21lLCBcInV0aWxzL3RyYW5zYWN0aW9ucy5qc29uXCIpO1xyXG5cclxuICAgIC8vIFNlbmRpbmcgdGhlIHVwZGF0ZWQgaW5jb21lIGFzIHRoZSByZXNwb25zZSB3aXRoIGEgMjAxIHN0YXR1cyBjb2RlXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24odXBkYXRlZEluY29tZSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIC8vIEhhbmRsaW5nIGVycm9ycyBkdXJpbmcgdGhlIGluY29tZSBhZGRpdGlvbiBwcm9jZXNzXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gIH1cclxufVxyXG5cclxuLy8gQ29udHJvbGxlciBmdW5jdGlvbiB0byBoYW5kbGUgdGhlIGVkaXRpbmcgb2YgYW4gZXhwZW5zZSBiYXNlZCBvbiBpdHMgSURcclxuYXN5bmMgZnVuY3Rpb24gZWRpdEluY29tZShyZXEsIHJlcykge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBFeHRyYWN0aW5nIHBhcmFtZXRlcnMgZnJvbSB0aGUgcmVxdWVzdFxyXG4gICAgY29uc3QgaWQgPSByZXEucGFyYW1zLmlkO1xyXG4gICAgY29uc3QgbmFtZSA9IHJlcS5ib2R5Lm5hbWU7IC8vIE5hbWUgb2YgdGhlIGluY29tZSBcclxuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gcmVxLmJvZHkuZGVzY3JpcHRpb247IC8vIERlc2NyaXB0aW9uIG9mIHRoZSBpbmNvbWVcclxuICAgIGNvbnN0IGFtb3VudCA9IHJlcS5ib2R5LmFtb3VudDsgLy8gQW1vdW50IG9mIHRoZSBpbmNvbWVcclxuICAgIGNvbnN0IHNvdXJjZSA9IHJlcS5ib2R5LnNvdXJjZTsgLy8gU291cmNlIG9mIHRoZSBpbmNvbWVcclxuICAgIGNvbnN0IHVzZXJuYW1lID0gcmVxLmJvZHkudXNlcm5hbWU7IC8vIFVzZXJuYW1lIGFzc29jaWF0ZWQgd2l0aCB0aGUgaW5jb21lXHJcbiAgICBjb25zdCBkYXRlID0gcmVxLmJvZHkuZGF0ZTtcclxuXHJcbiAgICAvLyBSZWFkaW5nIGFsbCBpbmNvbWUgZnJvbSB0aGUgSlNPTiBmaWxlXHJcbiAgICBjb25zdCBhbGxUcmFuc2FjdGlvbnMgPSBhd2FpdCByZWFkSlNPTigndXRpbHMvdHJhbnNhY3Rpb25zLmpzb24nKTtcclxuXHJcbiAgICAvLyBWYXJpYWJsZSB0byB0cmFjayBpZiBhbnkgbW9kaWZpY2F0aW9uIGhhcyBvY2N1cnJlZFxyXG4gICAgdmFyIG1vZGlmaWVkID0gZmFsc2U7XHJcblxyXG4gICAgLy8gSXRlcmF0aW5nIHRocm91Z2ggYWxsIGluY29tZSB0byBmaW5kIGFuZCB1cGRhdGUgdGhlIHNwZWNpZmllZCBpbmNvbWUgYnkgSURcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYWxsVHJhbnNhY3Rpb25zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHZhciBjdXJyZW50SW5jb21lID0gYWxsVHJhbnNhY3Rpb25zW2ldO1xyXG4gICAgICBpZiAoY3VycmVudEluY29tZS5pZCA9PSBpZCkge1xyXG4gICAgICAgIC8vIE1vZGlmeWluZyB0aGUgcHJvcGVydGllcyBvZiB0aGUgbWF0Y2hpbmcgaW5jb21lXHJcbiAgICAgICAgYWxsVHJhbnNhY3Rpb25zW2ldLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIGFsbFRyYW5zYWN0aW9uc1tpXS5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xyXG4gICAgICAgIGFsbFRyYW5zYWN0aW9uc1tpXS5hbW91bnQgPSBhbW91bnQ7XHJcbiAgICAgICAgYWxsVHJhbnNhY3Rpb25zW2ldLnNvdXJjZSA9IHNvdXJjZTtcclxuICAgICAgICBhbGxUcmFuc2FjdGlvbnNbaV0udXNlcm5hbWUgPSB1c2VybmFtZTtcclxuICAgICAgICBhbGxUcmFuc2FjdGlvbnNbaV0uZGF0ZSA9IGRhdGU7XHJcblxyXG4gICAgICAgIC8vIFNldHRpbmcgdGhlICdtb2RpZmllZCcgZmxhZyB0byB0cnVlXHJcbiAgICAgICAgbW9kaWZpZWQgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hlY2tpbmcgaWYgYW55IG1vZGlmaWNhdGlvbiBoYXMgb2NjdXJyZWRcclxuICAgIGlmIChtb2RpZmllZCkge1xyXG4gICAgICAvLyBXcml0aW5nIHRoZSB1cGRhdGVkIGluY29tZSBiYWNrIHRvIHRoZSBKU09OIGZpbGVcclxuICAgICAgYXdhaXQgZnMud3JpdGVGaWxlKCd1dGlscy90cmFuc2FjdGlvbnMuanNvbicsIEpTT04uc3RyaW5naWZ5KGFsbFRyYW5zYWN0aW9ucyksICd1dGY4Jyk7XHJcblxyXG4gICAgICAvLyBTZW5kaW5nIGEgc3VjY2VzcyByZXNwb25zZSB3aXRoIGEgMjAxIHN0YXR1cyBjb2RlXHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbih7IG1lc3NhZ2U6ICdJbmNvbWUgbW9kaWZpZWQgc3VjY2Vzc2Z1bGx5IScgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBTZW5kaW5nIGFuIGVycm9yIHJlc3BvbnNlIGlmIG5vIG1vZGlmaWNhdGlvbiBvY2N1cnJlZFxyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnRXJyb3Igb2NjdXJyZWQsIHVuYWJsZSB0byBtb2RpZnkhJyB9KTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgLy8gSGFuZGxpbmcgZXJyb3JzIGR1cmluZyB0aGUgZXhwZW5zZSBtb2RpZmljYXRpb24gcHJvY2Vzc1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB9KTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vLyBDb250cm9sbGVyIGZ1bmN0aW9uIHRvIGhhbmRsZSB0aGUgZGVsZXRpb24gb2YgYW4gaW5jb21lIGJhc2VkIG9uIGl0cyBJRFxyXG5hc3luYyBmdW5jdGlvbiBkZWxldGVJbmNvbWUocmVxLCByZXMpIHtcclxuICB0cnkge1xyXG4gICAgLy8gRXh0cmFjdGluZyB0aGUgSUQgcGFyYW1ldGVyIGZyb20gdGhlIHJlcXVlc3RcclxuICAgIGNvbnN0IGlkID0gcmVxLnBhcmFtcy5pZDtcclxuXHJcbiAgICAvLyBSZWFkaW5nIGFsbCBpbmNvbWVzIGZyb20gdGhlIEpTT04gZmlsZVxyXG4gICAgY29uc3QgYWxsVHJhbnNhY3Rpb25zID0gYXdhaXQgcmVhZEpTT04oJ3V0aWxzL3RyYW5zYWN0aW9ucy5qc29uJyk7XHJcblxyXG4gICAgLy8gVmFyaWFibGUgdG8gc3RvcmUgdGhlIGluZGV4IG9mIHRoZSBpbmNvbWUgdG8gYmUgZGVsZXRlZFxyXG4gICAgdmFyIGluZGV4ID0gLTE7XHJcblxyXG4gICAgLy8gSXRlcmF0aW5nIHRocm91Z2ggYWxsIGluY29tZXMgdG8gZmluZCB0aGUgc3BlY2lmaWVkIGluY29tZSBieSBJRFxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxUcmFuc2FjdGlvbnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgdmFyIGN1cnJlbnRJbmNvbWUgPSBhbGxUcmFuc2FjdGlvbnNbaV07XHJcbiAgICAgIGlmIChjdXJyZW50SW5jb21lLmlkID09IGlkKVxyXG4gICAgICAgIC8vIFN0b3JpbmcgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGluZyBpbmNvbWVcclxuICAgICAgICBpbmRleCA9IGk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hlY2tpbmcgaWYgdGhlIHNwZWNpZmllZCBpbmNvbWUgd2FzIGZvdW5kXHJcbiAgICBpZiAoaW5kZXggIT0gLTEpIHtcclxuICAgICAgLy8gUmVtb3ZpbmcgdGhlIGluY29tZSBmcm9tIHRoZSBhcnJheSBieSBpdHMgaW5kZXhcclxuICAgICAgYWxsVHJhbnNhY3Rpb25zLnNwbGljZShpbmRleCwgMSk7XHJcblxyXG4gICAgICAvLyBXcml0aW5nIHRoZSB1cGRhdGVkIGluY29tZXMgYmFjayB0byB0aGUgSlNPTiBmaWxlXHJcbiAgICAgIGF3YWl0IGZzLndyaXRlRmlsZSgndXRpbHMvdHJhbnNhY3Rpb25zLmpzb24nLCBKU09OLnN0cmluZ2lmeShhbGxUcmFuc2FjdGlvbnMpLCAndXRmOCcpO1xyXG5cclxuICAgICAgLy8gU2VuZGluZyBhIHN1Y2Nlc3MgcmVzcG9uc2Ugd2l0aCBhIDIwMSBzdGF0dXMgY29kZVxyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24oeyBtZXNzYWdlOiAnSW5jb21lIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5IScgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBTZW5kaW5nIGFuIGVycm9yIHJlc3BvbnNlIGlmIHRoZSBzcGVjaWZpZWQgaW5jb21lIHdhcyBub3QgZm91bmRcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogJ0Vycm9yIG9jY3VycmVkLCB1bmFibGUgdG8gZGVsZXRlIScgfSk7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIC8vIEhhbmRsaW5nIGVycm9ycyBkdXJpbmcgdGhlIGluY29tZSBkZWxldGlvbiBwcm9jZXNzXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbi8vIEV4cG9ydGluZyB0aGUgYWRkSW5jb21lIGZ1bmN0aW9uIHRvIG1ha2UgaXQgYWNjZXNzaWJsZSB0byBvdGhlciBwYXJ0cyBvZiB0aGUgYXBwbGljYXRpb25cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgYWRkSW5jb21lLCBlZGl0SW5jb21lLCBkZWxldGVJbmNvbWUsIHZpZXdUcmFuc2FjdGlvbnMsXHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IjJ4TEFlWTtBQUFBQSxjQUFBLFNBQUFBLENBQUEsU0FBQUMsY0FBQSxXQUFBQSxjQUFBLEVBQUFELGNBQUEsR0FmWjtBQUNBLEtBQU0sQ0FBQUUsRUFBRSxFQUFBRixjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDQyxRQUFRLEVBRWpDO0FBQ0EsS0FBTSxDQUFFQyxRQUFRLENBQUVDLFNBQVUsQ0FBQyxFQUFBUCxjQUFBLEdBQUFHLENBQUEsTUFBR0MsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUVyRDtBQUNBLEtBQU0sQ0FBRUksTUFBTyxDQUFDLEVBQUFSLGNBQUEsR0FBQUcsQ0FBQSxNQUFHQyxPQUFPLENBQUMsdUJBQXVCLENBQUMsRUFFbkQ7QUFDQSxjQUFlLENBQUFLLGdCQUFnQkEsQ0FBQ0MsR0FBRyxDQUFFQyxHQUFHLENBQUUsQ0FBQVgsY0FBQSxHQUFBWSxDQUFBLE1BQUFaLGNBQUEsR0FBQUcsQ0FBQSxNQUN4QyxHQUFJLENBQ0Y7QUFDQSxLQUFNLENBQUFVLGVBQWUsRUFBQWIsY0FBQSxHQUFBRyxDQUFBLE1BQUcsS0FBTSxDQUFBRyxRQUFRLENBQUMseUJBQXlCLENBQUMsRUFFakU7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