function cov_2mj7wnn4u8(){var path="/Users/swanhtetaung/Documents/DVOPS-Projects/DVOPS-Group-1/utils/TransactionUtil.js";var hash="5a1c7a1c5e1c0ce04efda49bbe0130aac7ed549e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/swanhtetaung/Documents/DVOPS-Projects/DVOPS-Group-1/utils/TransactionUtil.js",statementMap:{"0":{start:{line:2,column:11},end:{line:2,column:33}},"1":{start:{line:5,column:32},end:{line:5,column:53}},"2":{start:{line:8,column:19},end:{line:8,column:51}},"3":{start:{line:12,column:2},end:{line:21,column:3}},"4":{start:{line:14,column:27},end:{line:14,column:68}},"5":{start:{line:17,column:4},end:{line:17,column:49}},"6":{start:{line:20,column:4},end:{line:20,column:60}},"7":{start:{line:26,column:2},end:{line:46,column:3}},"8":{start:{line:28,column:17},end:{line:28,column:30}},"9":{start:{line:29,column:24},end:{line:29,column:44}},"10":{start:{line:30,column:19},end:{line:30,column:34}},"11":{start:{line:31,column:19},end:{line:31,column:34}},"12":{start:{line:32,column:21},end:{line:32,column:38}},"13":{start:{line:33,column:17},end:{line:33,column:30}},"14":{start:{line:36,column:22},end:{line:36,column:83}},"15":{start:{line:39,column:26},end:{line:39,column:79}},"16":{start:{line:42,column:4},end:{line:42,column:47}},"17":{start:{line:45,column:4},end:{line:45,column:60}},"18":{start:{line:51,column:2},end:{line:98,column:3}},"19":{start:{line:53,column:15},end:{line:53,column:28}},"20":{start:{line:54,column:17},end:{line:54,column:30}},"21":{start:{line:55,column:24},end:{line:55,column:44}},"22":{start:{line:56,column:19},end:{line:56,column:34}},"23":{start:{line:57,column:19},end:{line:57,column:34}},"24":{start:{line:58,column:21},end:{line:58,column:38}},"25":{start:{line:59,column:17},end:{line:59,column:30}},"26":{start:{line:62,column:28},end:{line:62,column:69}},"27":{start:{line:65,column:19},end:{line:65,column:24}},"28":{start:{line:68,column:4},end:{line:82,column:5}},"29":{start:{line:68,column:17},end:{line:68,column:18}},"30":{start:{line:69,column:26},end:{line:69,column:44}},"31":{start:{line:70,column:6},end:{line:81,column:7}},"32":{start:{line:72,column:8},end:{line:72,column:39}},"33":{start:{line:73,column:8},end:{line:73,column:53}},"34":{start:{line:74,column:8},end:{line:74,column:43}},"35":{start:{line:75,column:8},end:{line:75,column:43}},"36":{start:{line:76,column:8},end:{line:76,column:47}},"37":{start:{line:77,column:8},end:{line:77,column:39}},"38":{start:{line:80,column:8},end:{line:80,column:24}},"39":{start:{line:85,column:4},end:{line:94,column:5}},"40":{start:{line:87,column:6},end:{line:87,column:93}},"41":{start:{line:90,column:6},end:{line:90,column:80}},"42":{start:{line:93,column:6},end:{line:93,column:84}},"43":{start:{line:97,column:4},end:{line:97,column:60}},"44":{start:{line:104,column:2},end:{line:139,column:3}},"45":{start:{line:106,column:15},end:{line:106,column:28}},"46":{start:{line:109,column:28},end:{line:109,column:69}},"47":{start:{line:112,column:16},end:{line:112,column:18}},"48":{start:{line:115,column:4},end:{line:120,column:5}},"49":{start:{line:115,column:17},end:{line:115,column:18}},"50":{start:{line:116,column:26},end:{line:116,column:44}},"51":{start:{line:117,column:6},end:{line:119,column:18}},"52":{start:{line:119,column:8},end:{line:119,column:18}},"53":{start:{line:123,column:4},end:{line:135,column:5}},"54":{start:{line:125,column:6},end:{line:125,column:39}},"55":{start:{line:128,column:6},end:{line:128,column:93}},"56":{start:{line:131,column:6},end:{line:131,column:79}},"57":{start:{line:134,column:6},end:{line:134,column:84}},"58":{start:{line:138,column:4},end:{line:138,column:60}},"59":{start:{line:144,column:0},end:{line:146,column:2}}},fnMap:{"0":{name:"viewTransactions",decl:{start:{line:11,column:15},end:{line:11,column:31}},loc:{start:{line:11,column:42},end:{line:22,column:1}},line:11},"1":{name:"addIncome",decl:{start:{line:25,column:15},end:{line:25,column:24}},loc:{start:{line:25,column:35},end:{line:47,column:1}},line:25},"2":{name:"editIncome",decl:{start:{line:50,column:15},end:{line:50,column:25}},loc:{start:{line:50,column:36},end:{line:99,column:1}},line:50},"3":{name:"deleteIncome",decl:{start:{line:103,column:15},end:{line:103,column:27}},loc:{start:{line:103,column:38},end:{line:140,column:1}},line:103}},branchMap:{"0":{loc:{start:{line:70,column:6},end:{line:81,column:7}},type:"if",locations:[{start:{line:70,column:6},end:{line:81,column:7}},{start:{line:70,column:6},end:{line:81,column:7}}],line:70},"1":{loc:{start:{line:85,column:4},end:{line:94,column:5}},type:"if",locations:[{start:{line:85,column:4},end:{line:94,column:5}},{start:{line:85,column:4},end:{line:94,column:5}}],line:85},"2":{loc:{start:{line:117,column:6},end:{line:119,column:18}},type:"if",locations:[{start:{line:117,column:6},end:{line:119,column:18}},{start:{line:117,column:6},end:{line:119,column:18}}],line:117},"3":{loc:{start:{line:123,column:4},end:{line:135,column:5}},type:"if",locations:[{start:{line:123,column:4},end:{line:135,column:5}},{start:{line:123,column:4},end:{line:135,column:5}}],line:123}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5a1c7a1c5e1c0ce04efda49bbe0130aac7ed549e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2mj7wnn4u8=function(){return actualCoverage;};}return actualCoverage;}cov_2mj7wnn4u8();// Importing the 'fs' module 
const fs=(cov_2mj7wnn4u8().s[0]++,require("fs").promises);// Importing readJSON and writeJSON functions from UserUtil
const{readJSON,writeJSON}=(cov_2mj7wnn4u8().s[1]++,require('./UserUtil'));// Importing Transactions model from the models directory
const{Income}=(cov_2mj7wnn4u8().s[2]++,require('../models/Transaction'));// Controller function to handle the viewing of all transactions
async function viewTransactions(req,res){cov_2mj7wnn4u8().f[0]++;cov_2mj7wnn4u8().s[3]++;try{// Read all transactions from the JSON file using the readJSON utility function
const allTransaction=(cov_2mj7wnn4u8().s[4]++,await readJSON("utils/transactions.json"));// Return a success response with a status code of 200 and JSON containing all transactions
cov_2mj7wnn4u8().s[5]++;return res.status(200).json(allTransactions);}catch(error){cov_2mj7wnn4u8().s[6]++;// If an error occurs during the process, handle it and return a response with a status code of 500
return res.status(500).json({message:error.message});}}// Controller function to handle the addition of a new income
async function addIncome(req,res){cov_2mj7wnn4u8().f[1]++;cov_2mj7wnn4u8().s[7]++;try{// Extracting data from the request body
const name=(cov_2mj7wnn4u8().s[8]++,req.body.name);// Name of the income 
const description=(cov_2mj7wnn4u8().s[9]++,req.body.description);// Description of the income
const amount=(cov_2mj7wnn4u8().s[10]++,req.body.amount);// Amount of the income
const source=(cov_2mj7wnn4u8().s[11]++,req.body.source);// Source of the income
const username=(cov_2mj7wnn4u8().s[12]++,req.body.username);// Username associated with the income
const date=(cov_2mj7wnn4u8().s[13]++,req.body.date);// Creating a new Income instance
const newIncome=(cov_2mj7wnn4u8().s[14]++,new Income(name,description,amount,source,username,date));// Writing the new income to the JSON file and getting the updated expenses
const updatedIncome=(cov_2mj7wnn4u8().s[15]++,await writeJSON(newIncome,"utils/transactions.json"));// Sending the updated income as the response with a 201 status code
cov_2mj7wnn4u8().s[16]++;return res.status(201).json(updatedIncome);}catch(error){cov_2mj7wnn4u8().s[17]++;// Handling errors during the income addition process
return res.status(500).json({message:error.message});}}// Controller function to handle the editing of an expense based on its ID
async function editIncome(req,res){cov_2mj7wnn4u8().f[2]++;cov_2mj7wnn4u8().s[18]++;try{// Extracting parameters from the request
const id=(cov_2mj7wnn4u8().s[19]++,req.params.id);const name=(cov_2mj7wnn4u8().s[20]++,req.body.name);// Name of the income 
const description=(cov_2mj7wnn4u8().s[21]++,req.body.description);// Description of the income
const amount=(cov_2mj7wnn4u8().s[22]++,req.body.amount);// Amount of the income
const source=(cov_2mj7wnn4u8().s[23]++,req.body.source);// Source of the income
const username=(cov_2mj7wnn4u8().s[24]++,req.body.username);// Username associated with the income
const date=(cov_2mj7wnn4u8().s[25]++,req.body.date);// Reading all income from the JSON file
const allTransactions=(cov_2mj7wnn4u8().s[26]++,await readJSON('utils/transactions.json'));// Variable to track if any modification has occurred
var modified=(cov_2mj7wnn4u8().s[27]++,false);// Iterating through all income to find and update the specified income by ID
cov_2mj7wnn4u8().s[28]++;for(var i=(cov_2mj7wnn4u8().s[29]++,0);i<allTransactions.length;i++){var currentIncome=(cov_2mj7wnn4u8().s[30]++,allTransactions[i]);cov_2mj7wnn4u8().s[31]++;if(currentIncome.id==id){cov_2mj7wnn4u8().b[0][0]++;cov_2mj7wnn4u8().s[32]++;// Modifying the properties of the matching income
allTransactions[i].name=name;cov_2mj7wnn4u8().s[33]++;allTransactions[i].description=description;cov_2mj7wnn4u8().s[34]++;allTransactions[i].amount=amount;cov_2mj7wnn4u8().s[35]++;allTransactions[i].source=source;cov_2mj7wnn4u8().s[36]++;allTransactions[i].username=username;cov_2mj7wnn4u8().s[37]++;allTransactions[i].date=date;// Setting the 'modified' flag to true
cov_2mj7wnn4u8().s[38]++;modified=true;}else{cov_2mj7wnn4u8().b[0][1]++;}}// Checking if any modification has occurred
cov_2mj7wnn4u8().s[39]++;if(modified){cov_2mj7wnn4u8().b[1][0]++;cov_2mj7wnn4u8().s[40]++;// Writing the updated income back to the JSON file
await fs.writeFile('utils/transactions.json',JSON.stringify(allTransactions),'utf8');// Sending a success response with a 201 status code
cov_2mj7wnn4u8().s[41]++;return res.status(201).json({message:'Income modified successfully!'});}else{cov_2mj7wnn4u8().b[1][1]++;cov_2mj7wnn4u8().s[42]++;// Sending an error response if no modification occurred
return res.status(500).json({message:'Error occurred, unable to modify!'});}}catch(error){cov_2mj7wnn4u8().s[43]++;// Handling errors during the expense modification process
return res.status(500).json({message:error.message});}}// Controller function to handle the deletion of an income based on its ID
async function deleteIncome(req,res){cov_2mj7wnn4u8().f[3]++;cov_2mj7wnn4u8().s[44]++;try{// Extracting the ID parameter from the request
const id=(cov_2mj7wnn4u8().s[45]++,req.params.id);// Reading all incomes from the JSON file
const allTransactions=(cov_2mj7wnn4u8().s[46]++,await readJSON('utils/transactions.json'));// Variable to store the index of the income to be deleted
var index=(cov_2mj7wnn4u8().s[47]++,-1);// Iterating through all incomes to find the specified income by ID
cov_2mj7wnn4u8().s[48]++;for(var i=(cov_2mj7wnn4u8().s[49]++,0);i<allTransactions.length;i++){var currentIncome=(cov_2mj7wnn4u8().s[50]++,allTransactions[i]);cov_2mj7wnn4u8().s[51]++;if(currentIncome.id==id){cov_2mj7wnn4u8().b[2][0]++;cov_2mj7wnn4u8().s[52]++;// Storing the index of the matching income
index=i;}else{cov_2mj7wnn4u8().b[2][1]++;}}// Checking if the specified income was found
cov_2mj7wnn4u8().s[53]++;if(index!=-1){cov_2mj7wnn4u8().b[3][0]++;cov_2mj7wnn4u8().s[54]++;// Removing the income from the array by its index
allTransactions.splice(index,1);// Writing the updated incomes back to the JSON file
cov_2mj7wnn4u8().s[55]++;await fs.writeFile('utils/transactions.json',JSON.stringify(allTransactions),'utf8');// Sending a success response with a 201 status code
cov_2mj7wnn4u8().s[56]++;return res.status(201).json({message:'Income deleted successfully!'});}else{cov_2mj7wnn4u8().b[3][1]++;cov_2mj7wnn4u8().s[57]++;// Sending an error response if the specified income was not found
return res.status(500).json({message:'Error occurred, unable to delete!'});}}catch(error){cov_2mj7wnn4u8().s[58]++;// Handling errors during the income deletion process
return res.status(500).json({message:error.message});}}// Exporting the addIncome function to make it accessible to other parts of the application
cov_2mj7wnn4u8().s[59]++;module.exports={addIncome,editIncome,deleteIncome,viewTransactions};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,