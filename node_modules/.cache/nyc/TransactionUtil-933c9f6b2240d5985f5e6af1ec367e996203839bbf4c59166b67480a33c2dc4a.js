function cov_1zvg4iqe3p(){var path="C:\\Users\\Chun Kang\\Desktop\\DVOPS_Project\\utils\\TransactionUtil.js";var hash="4542dd7a6e8c03d8199b4c345b851e2ef543a420";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Chun Kang\\Desktop\\DVOPS_Project\\utils\\TransactionUtil.js",statementMap:{"0":{start:{line:2,column:11},end:{line:2,column:33}},"1":{start:{line:5,column:32},end:{line:5,column:53}},"2":{start:{line:8,column:19},end:{line:8,column:51}},"3":{start:{line:12,column:2},end:{line:21,column:3}},"4":{start:{line:14,column:28},end:{line:14,column:69}},"5":{start:{line:17,column:4},end:{line:17,column:49}},"6":{start:{line:20,column:4},end:{line:20,column:60}},"7":{start:{line:26,column:2},end:{line:55,column:3}},"8":{start:{line:29,column:26},end:{line:29,column:31}},"9":{start:{line:32,column:4},end:{line:34,column:5}},"10":{start:{line:33,column:6},end:{line:33,column:64}},"11":{start:{line:37,column:17},end:{line:37,column:30}},"12":{start:{line:38,column:24},end:{line:38,column:44}},"13":{start:{line:39,column:19},end:{line:39,column:34}},"14":{start:{line:40,column:19},end:{line:40,column:34}},"15":{start:{line:41,column:21},end:{line:41,column:38}},"16":{start:{line:42,column:17},end:{line:42,column:30}},"17":{start:{line:45,column:22},end:{line:45,column:83}},"18":{start:{line:48,column:26},end:{line:48,column:79}},"19":{start:{line:51,column:4},end:{line:51,column:47}},"20":{start:{line:54,column:4},end:{line:54,column:60}},"21":{start:{line:60,column:2},end:{line:107,column:3}},"22":{start:{line:62,column:15},end:{line:62,column:28}},"23":{start:{line:63,column:17},end:{line:63,column:30}},"24":{start:{line:64,column:24},end:{line:64,column:44}},"25":{start:{line:65,column:19},end:{line:65,column:34}},"26":{start:{line:66,column:19},end:{line:66,column:34}},"27":{start:{line:67,column:21},end:{line:67,column:38}},"28":{start:{line:68,column:17},end:{line:68,column:30}},"29":{start:{line:71,column:28},end:{line:71,column:69}},"30":{start:{line:74,column:19},end:{line:74,column:24}},"31":{start:{line:77,column:4},end:{line:91,column:5}},"32":{start:{line:77,column:17},end:{line:77,column:18}},"33":{start:{line:78,column:26},end:{line:78,column:44}},"34":{start:{line:79,column:6},end:{line:90,column:7}},"35":{start:{line:81,column:8},end:{line:81,column:39}},"36":{start:{line:82,column:8},end:{line:82,column:53}},"37":{start:{line:83,column:8},end:{line:83,column:43}},"38":{start:{line:84,column:8},end:{line:84,column:43}},"39":{start:{line:85,column:8},end:{line:85,column:47}},"40":{start:{line:86,column:8},end:{line:86,column:39}},"41":{start:{line:89,column:8},end:{line:89,column:24}},"42":{start:{line:94,column:4},end:{line:103,column:5}},"43":{start:{line:96,column:6},end:{line:96,column:93}},"44":{start:{line:99,column:6},end:{line:99,column:80}},"45":{start:{line:102,column:6},end:{line:102,column:84}},"46":{start:{line:106,column:4},end:{line:106,column:60}},"47":{start:{line:113,column:2},end:{line:148,column:3}},"48":{start:{line:115,column:15},end:{line:115,column:28}},"49":{start:{line:118,column:28},end:{line:118,column:69}},"50":{start:{line:121,column:16},end:{line:121,column:18}},"51":{start:{line:124,column:4},end:{line:129,column:5}},"52":{start:{line:124,column:17},end:{line:124,column:18}},"53":{start:{line:125,column:26},end:{line:125,column:44}},"54":{start:{line:126,column:6},end:{line:128,column:18}},"55":{start:{line:128,column:8},end:{line:128,column:18}},"56":{start:{line:132,column:4},end:{line:144,column:5}},"57":{start:{line:134,column:6},end:{line:134,column:39}},"58":{start:{line:137,column:6},end:{line:137,column:93}},"59":{start:{line:140,column:6},end:{line:140,column:79}},"60":{start:{line:143,column:6},end:{line:143,column:84}},"61":{start:{line:147,column:4},end:{line:147,column:60}},"62":{start:{line:153,column:0},end:{line:155,column:2}}},fnMap:{"0":{name:"viewTransactions",decl:{start:{line:11,column:15},end:{line:11,column:31}},loc:{start:{line:11,column:42},end:{line:22,column:1}},line:11},"1":{name:"addIncome",decl:{start:{line:25,column:15},end:{line:25,column:24}},loc:{start:{line:25,column:35},end:{line:56,column:1}},line:25},"2":{name:"editIncome",decl:{start:{line:59,column:15},end:{line:59,column:25}},loc:{start:{line:59,column:36},end:{line:108,column:1}},line:59},"3":{name:"deleteIncome",decl:{start:{line:112,column:15},end:{line:112,column:27}},loc:{start:{line:112,column:38},end:{line:149,column:1}},line:112}},branchMap:{"0":{loc:{start:{line:32,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:32,column:4},end:{line:34,column:5}},{start:{line:32,column:4},end:{line:34,column:5}}],line:32},"1":{loc:{start:{line:79,column:6},end:{line:90,column:7}},type:"if",locations:[{start:{line:79,column:6},end:{line:90,column:7}},{start:{line:79,column:6},end:{line:90,column:7}}],line:79},"2":{loc:{start:{line:94,column:4},end:{line:103,column:5}},type:"if",locations:[{start:{line:94,column:4},end:{line:103,column:5}},{start:{line:94,column:4},end:{line:103,column:5}}],line:94},"3":{loc:{start:{line:126,column:6},end:{line:128,column:18}},type:"if",locations:[{start:{line:126,column:6},end:{line:128,column:18}},{start:{line:126,column:6},end:{line:128,column:18}}],line:126},"4":{loc:{start:{line:132,column:4},end:{line:144,column:5}},type:"if",locations:[{start:{line:132,column:4},end:{line:144,column:5}},{start:{line:132,column:4},end:{line:144,column:5}}],line:132}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4542dd7a6e8c03d8199b4c345b851e2ef543a420"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1zvg4iqe3p=function(){return actualCoverage;};}return actualCoverage;}cov_1zvg4iqe3p();// Importing the 'fs' module 
const fs=(cov_1zvg4iqe3p().s[0]++,require("fs").promises);// Importing readJSON and writeJSON functions from UserUtil
const{readJSON,writeJSON}=(cov_1zvg4iqe3p().s[1]++,require('./UserUtil'));// Importing Transactions model from the models directory
const{Income}=(cov_1zvg4iqe3p().s[2]++,require('../models/Transaction'));// Controller function to handle the viewing of all transactions
async function viewTransactions(req,res){cov_1zvg4iqe3p().f[0]++;cov_1zvg4iqe3p().s[3]++;try{// Read all transactions from the JSON file using the readJSON utility function
const allTransactions=(cov_1zvg4iqe3p().s[4]++,await readJSON("utils/transactions.json"));// Return a success response with a status code of 200 and JSON containing all transactions
cov_1zvg4iqe3p().s[5]++;return res.status(200).json(allTransactions);}catch(error){cov_1zvg4iqe3p().s[6]++;// If an error occurs during the process, handle it and return a response with a status code of 500
return res.status(500).json({message:error.message});}}// Controller function to handle the addition of a new income
async function addIncome(req,res){cov_1zvg4iqe3p().f[1]++;cov_1zvg4iqe3p().s[7]++;try{// Default used for adding income unless unit testing
const simulateError=(cov_1zvg4iqe3p().s[8]++,false);// For unit testing simulation, if not unit testing, continue with income addition logic
cov_1zvg4iqe3p().s[9]++;if(simulateError){cov_1zvg4iqe3p().b[0][0]++;cov_1zvg4iqe3p().s[10]++;throw new Error('Simulated error during income addition');}else{cov_1zvg4iqe3p().b[0][1]++;}// Extracting data from the request body
const name=(cov_1zvg4iqe3p().s[11]++,req.body.name);// Name of the income 
const description=(cov_1zvg4iqe3p().s[12]++,req.body.description);// Description of the income
const amount=(cov_1zvg4iqe3p().s[13]++,req.body.amount);// Amount of the income
const source=(cov_1zvg4iqe3p().s[14]++,req.body.source);// Source of the income
const username=(cov_1zvg4iqe3p().s[15]++,req.body.username);// Username associated with the income
const date=(cov_1zvg4iqe3p().s[16]++,req.body.date);// Creating a new Income instance
const newIncome=(cov_1zvg4iqe3p().s[17]++,new Income(name,description,amount,source,username,date));// Writing the new income to the JSON file and getting the updated expenses
const updatedIncome=(cov_1zvg4iqe3p().s[18]++,await writeJSON(newIncome,"utils/transactions.json"));// Sending the updated income as the response with a 201 status code
cov_1zvg4iqe3p().s[19]++;return res.status(201).json(updatedIncome);}catch(error){cov_1zvg4iqe3p().s[20]++;// Handling errors during the income addition process
return res.status(500).json({message:error.message});}}// Controller function to handle the editing of an expense based on its ID
async function editIncome(req,res){cov_1zvg4iqe3p().f[2]++;cov_1zvg4iqe3p().s[21]++;try{// Extracting parameters from the request
const id=(cov_1zvg4iqe3p().s[22]++,req.params.id);const name=(cov_1zvg4iqe3p().s[23]++,req.body.name);// Name of the income 
const description=(cov_1zvg4iqe3p().s[24]++,req.body.description);// Description of the income
const amount=(cov_1zvg4iqe3p().s[25]++,req.body.amount);// Amount of the income
const source=(cov_1zvg4iqe3p().s[26]++,req.body.source);// Source of the income
const username=(cov_1zvg4iqe3p().s[27]++,req.body.username);// Username associated with the income
const date=(cov_1zvg4iqe3p().s[28]++,req.body.date);// Reading all income from the JSON file
const allTransactions=(cov_1zvg4iqe3p().s[29]++,await readJSON('utils/transactions.json'));// Variable to track if any modification has occurred
var modified=(cov_1zvg4iqe3p().s[30]++,false);// Iterating through all income to find and update the specified income by ID
cov_1zvg4iqe3p().s[31]++;for(var i=(cov_1zvg4iqe3p().s[32]++,0);i<allTransactions.length;i++){var currentIncome=(cov_1zvg4iqe3p().s[33]++,allTransactions[i]);cov_1zvg4iqe3p().s[34]++;if(currentIncome.id==id){cov_1zvg4iqe3p().b[1][0]++;cov_1zvg4iqe3p().s[35]++;// Modifying the properties of the matching income
allTransactions[i].name=name;cov_1zvg4iqe3p().s[36]++;allTransactions[i].description=description;cov_1zvg4iqe3p().s[37]++;allTransactions[i].amount=amount;cov_1zvg4iqe3p().s[38]++;allTransactions[i].source=source;cov_1zvg4iqe3p().s[39]++;allTransactions[i].username=username;cov_1zvg4iqe3p().s[40]++;allTransactions[i].date=date;// Setting the 'modified' flag to true
cov_1zvg4iqe3p().s[41]++;modified=true;}else{cov_1zvg4iqe3p().b[1][1]++;}}// Checking if any modification has occurred
cov_1zvg4iqe3p().s[42]++;if(modified){cov_1zvg4iqe3p().b[2][0]++;cov_1zvg4iqe3p().s[43]++;// Writing the updated income back to the JSON file
await fs.writeFile('utils/transactions.json',JSON.stringify(allTransactions),'utf8');// Sending a success response with a 201 status code
cov_1zvg4iqe3p().s[44]++;return res.status(201).json({message:'Income modified successfully!'});}else{cov_1zvg4iqe3p().b[2][1]++;cov_1zvg4iqe3p().s[45]++;// Sending an error response if no modification occurred
return res.status(500).json({message:'Error occurred, unable to modify!'});}}catch(error){cov_1zvg4iqe3p().s[46]++;// Handling errors during the expense modification process
return res.status(500).json({message:error.message});}}// Controller function to handle the deletion of an income based on its ID
async function deleteIncome(req,res){cov_1zvg4iqe3p().f[3]++;cov_1zvg4iqe3p().s[47]++;try{// Extracting the ID parameter from the request
const id=(cov_1zvg4iqe3p().s[48]++,req.params.id);// Reading all incomes from the JSON file
const allTransactions=(cov_1zvg4iqe3p().s[49]++,await readJSON('utils/transactions.json'));// Variable to store the index of the income to be deleted
var index=(cov_1zvg4iqe3p().s[50]++,-1);// Iterating through all incomes to find the specified income by ID
cov_1zvg4iqe3p().s[51]++;for(var i=(cov_1zvg4iqe3p().s[52]++,0);i<allTransactions.length;i++){var currentIncome=(cov_1zvg4iqe3p().s[53]++,allTransactions[i]);cov_1zvg4iqe3p().s[54]++;if(currentIncome.id==id){cov_1zvg4iqe3p().b[3][0]++;cov_1zvg4iqe3p().s[55]++;// Storing the index of the matching income
index=i;}else{cov_1zvg4iqe3p().b[3][1]++;}}// Checking if the specified income was found
cov_1zvg4iqe3p().s[56]++;if(index!=-1){cov_1zvg4iqe3p().b[4][0]++;cov_1zvg4iqe3p().s[57]++;// Removing the income from the array by its index
allTransactions.splice(index,1);// Writing the updated incomes back to the JSON file
cov_1zvg4iqe3p().s[58]++;await fs.writeFile('utils/transactions.json',JSON.stringify(allTransactions),'utf8');// Sending a success response with a 201 status code
cov_1zvg4iqe3p().s[59]++;return res.status(201).json({message:'Income deleted successfully!'});}else{cov_1zvg4iqe3p().b[4][1]++;cov_1zvg4iqe3p().s[60]++;// Sending an error response if the specified income was not found
return res.status(500).json({message:'Error occurred, unable to delete!'});}}catch(error){cov_1zvg4iqe3p().s[61]++;// Handling errors during the income deletion process
return res.status(500).json({message:error.message});}}// Exporting the addIncome function to make it accessible to other parts of the application
cov_1zvg4iqe3p().s[62]++;module.exports={addIncome,editIncome,deleteIncome,viewTransactions};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,